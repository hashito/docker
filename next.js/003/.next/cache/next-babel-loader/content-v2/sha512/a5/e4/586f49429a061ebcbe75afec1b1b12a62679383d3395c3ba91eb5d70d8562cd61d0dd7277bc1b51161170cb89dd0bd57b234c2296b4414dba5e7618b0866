{"ast":null,"code":"var _jsxFileName = \"/Users/hashito/git/docker/next.js/003/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react'; //import document, { Html, Head, Main, NextScript } from 'next/document'\n\nconst bodyPix = require('@tensorflow-models/body-pix');\n\nasync function loadAndPredict() {\n  const img = document.getElementById('image');\n  const net = await bodyPix.load();\n  /**\n   * One of (see documentation below):\n   *   - net.segmentPerson\n   *   - net.segmentPersonParts\n   *   - net.segmentMultiPerson\n   *   - net.segmentMultiPersonParts\n   * See documentation below for details on each method.\n    */\n\n  const segmentation = await net.segmentPerson(img);\n  console.log(segmentation);\n}\n\nloadAndPredict();\nexport default (() => {\n  return __jsx(\"html\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }\n  }, __jsx(\"head\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }\n  }, __jsx(\"script\", {\n    src: \"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }), __jsx(\"script\", {\n    src: \"https://cdn.jsdelivr.net/npm/@tensorflow-models/body-pix@2.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  })), __jsx(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }\n  }, __jsx(\"img\", {\n    id: \"image\",\n    src: \"images/person.jpg\",\n    crossOrigin: \"anonymous\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  })), __jsx(\"script\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/hashito/git/docker/next.js/003/pages/index.tsx"],"names":["React","bodyPix","require","loadAndPredict","img","document","getElementById","net","load","segmentation","segmentPerson","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,6BAAD,CAAvB;;AAGA,eAAeC,cAAf,GAAgC;AAC5B,QAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,QAAMC,GAAG,GAAG,MAAMN,OAAO,CAACO,IAAR,EAAlB;AAEF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,QAAMC,YAAY,GAAG,MAAMF,GAAG,CAACG,aAAJ,CAAkBN,GAAlB,CAA3B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD;;AACDN,cAAc;AAGd,gBAAe,MAAM;AACrB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,GAAG,EAAC,mDAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,GAAG,EAAC,8DAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADO,EAMP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,GAAG,EAAC,mBAApB;AAAwC,IAAA,WAAW,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANO,EASP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATO,CAAP;AAaC,CAdD","sourcesContent":["import React from 'react'\n//import document, { Html, Head, Main, NextScript } from 'next/document'\nconst bodyPix = require('@tensorflow-models/body-pix');\n\n\nasync function loadAndPredict() {\n    const img = document.getElementById('image');\n    const net = await bodyPix.load(/** optional arguments, see below **/);\n\n  /**\n   * One of (see documentation below):\n   *   - net.segmentPerson\n   *   - net.segmentPersonParts\n   *   - net.segmentMultiPerson\n   *   - net.segmentMultiPersonParts\n   * See documentation below for details on each method.\n    */\n  const segmentation = await net.segmentPerson(img);\n  console.log(segmentation);\n}\nloadAndPredict();\n\n\nexport default () => {\nreturn <html>\n<head>\n  <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.2\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/@tensorflow-models/body-pix@2.0\"></script>\n</head>\n\n<body>\n  <img id='image' src='images/person.jpg' crossOrigin='anonymous'/>\n</body>\n<script>\n</script>\n</html>\n\n}"]},"metadata":{},"sourceType":"module"}