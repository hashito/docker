/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={936:(e,t,n)=>{"use strict";n.r(t),n.d(t,{BodyPix:()=>Mf,PART_CHANNELS:()=>Xf,blurBodyPart:()=>Jf,drawBokehEffect:()=>Yf,drawMask:()=>jf,drawPixelatedMask:()=>Gf,flipPoseHorizontal:()=>yf,load:()=>Of,resizeAndPadTo:()=>hf,scaleAndCropToInputTensorShape:()=>mf,toColoredPartMask:()=>Hf,toMask:()=>Vf,version:()=>Qf});var r={};n.r(r),n.d(r,{arraysEqual:()=>Q,assert:()=>q,assertNonNegativeIntegerDimensions:()=>_e,assertNonNull:()=>G,assertShapesMatch:()=>j,bytesFromStringArray:()=>fe,bytesPerElement:()=>me,checkConversionForErrors:()=>pe,clamp:()=>V,computeStrides:()=>Ne,createScalarValue:()=>Ur,createShuffledIndices:()=>ne,decodeString:()=>Jr,distSquared:()=>U,encodeString:()=>Yr,fetch:()=>Gr,flatten:()=>Y,getArrayFromDType:()=>le,getTypedArrayFromDType:()=>ue,hasEncodingLoss:()=>de,indexToLoc:()=>Me,inferDtype:()=>we,inferFromImplicitShape:()=>se,isBoolean:()=>ye,isFunction:()=>xe,isInt:()=>Z,isNumber:()=>be,isPromise:()=>$e,isScalarShape:()=>X,isString:()=>ge,isTypedArray:()=>he,isValidDtype:()=>ce,locToIndex:()=>Ie,makeOnesTypedArray:()=>Ee,makeZerosNestedTypedArray:()=>Ae,makeZerosTypedArray:()=>Te,nearestDivisor:()=>ve,nearestLargerEven:()=>W,now:()=>jr,parseAxisParam:()=>oe,randUniform:()=>K,repeatedTry:()=>ae,rightPad:()=>re,shuffle:()=>P,shuffleCombo:()=>z,sizeFromShape:()=>J,sizeToSquarishShape:()=>te,squeezeShape:()=>ie,sum:()=>H,tanh:()=>ee,toNestedArray:()=>Se,toTypedArray:()=>qr});var a={};n.r(a),n.d(a,{assertTypesMatch:()=>xa,getTensorsInContainer:()=>Na,isTensorInList:()=>va,makeTypesMatch:()=>wa});var s={};n.r(s),n.d(s,{isBrowser:()=>$a,isMobile:()=>Ma});var o={};n.r(o),n.d(o,{browserFiles:()=>Vs,browserHTTPRequest:()=>Js,concatenateArrayBuffers:()=>Ya,copyModel:()=>Ms,decodeWeights:()=>Ua,encodeWeights:()=>Ka,fromMemory:()=>Zs,getLoadHandlers:()=>rs,getModelArtifactsInfoForJSON:()=>Xa,getSaveHandlers:()=>ns,http:()=>Ys,isHTTPScheme:()=>js,listModels:()=>_s,loadWeights:()=>Ks,moveModel:()=>$s,registerLoadRouter:()=>ts,registerSaveRouter:()=>es,removeModel:()=>Is,weightsLoaderFactory:()=>Us,withSaveHandler:()=>eo});var i={};n.r(i),n.d(i,{confusionMatrix:()=>ao});var u={};n.r(u),n.d(u,{fromPixels:()=>uo,toPixels:()=>io});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>lo});var p={};n.r(p),n.d(p,{calculateShapes:()=>ho,validateInput:()=>co,validateUpdateShape:()=>po});var c={};n.r(c),n.d(c,{assertParamsValid:()=>mo,computeFlatOffset:()=>Ao,computeOutShape:()=>go,getNormalizedAxes:()=>xo,isSliceContinous:()=>To,maskToAxes:()=>fo,parseSliceParams:()=>_o,sliceInfo:()=>Io,startForAxis:()=>So,startIndicesWithElidedDims:()=>vo,stopForAxis:()=>Eo,stopIndicesWithElidedDims:()=>No,stridesForAxis:()=>ko,stridesWithElidedDims:()=>yo});var d={};n.r(d),n.d(d,{Serializable:()=>Mo,SerializationMap:()=>$o,registerClass:()=>Do});var h={};n.r(h),n.d(h,{TEST_EPSILON_FLOAT16:()=>Oo,encodeStrings:()=>Ho,expectArrayBuffersEqual:()=>Wo,expectArraysClose:()=>Fo,expectArraysEqual:()=>Lo,expectNumbersClose:()=>Po,expectPromiseToFail:()=>Bo,expectValuesInRange:()=>Vo,testEpsilon:()=>Co});var m={};n.r(m),n.d(m,{conv2d:()=>Ic,depthwiseConv2d:()=>Dc,matMul:()=>Oc});var f={};n.r(f),n.d(f,{collectGatherOpShapeInfo:()=>nh,computeOutShape:()=>th,segOpComputeOptimalWindowSize:()=>eh});var g={};n.r(g),n.d(g,{ERF_A1:()=>Ld,ERF_A2:()=>Pd,ERF_A3:()=>zd,ERF_A4:()=>Vd,ERF_A5:()=>Wd,ERF_P:()=>Bd,PARALLELIZE_THRESHOLD:()=>Ad,SELU_SCALE:()=>Rd,SELU_SCALEALPHA:()=>Cd,applyActivation:()=>Ac,assertAndGetBroadcastShape:()=>Bi,assertAxesAreInnerMostDims:()=>Dl,assertParamsConsistent:()=>Ed,assignToTypedArray:()=>Jd,axesAreInnerMostDims:()=>_l,calculateShapes:()=>ho,combineLocations:()=>Il,complexWithEvenIndex:()=>jd,complexWithOddIndex:()=>Gd,computeConv2DInfo:()=>au,computeConv3DInfo:()=>su,computeDefaultPad:()=>ou,computeDilation2DInfo:()=>tu,computeOptimalWindowSize:()=>_d,computeOutAndReduceShapes:()=>Ml,computeOutShape:()=>Td,computePool2DInfo:()=>nu,computePool3DInfo:()=>ru,convertConv2DDataFormat:()=>hu,eitherStridesOrDilationsAreOne:()=>du,expandShapeToKeepDim:()=>$l,exponent:()=>Qd,exponents:()=>Xd,fromStringArrayToUint8:()=>ah,fromUint8ToStringArray:()=>rh,getAxesPermutation:()=>Ol,getBroadcastDims:()=>Ci,getComplexWithIndex:()=>Yd,getFusedBiasGradient:()=>Tc,getFusedDyActivation:()=>Ec,getImageCenter:()=>Id,getInnerMostAxes:()=>Cl,getPermuted:()=>$d,getReductionAxes:()=>Ri,getReshaped:()=>Md,getReshapedPermuted:()=>Dd,getSliceBeginCoords:()=>Od,getSliceSize:()=>Fd,getUndoAxesPermutation:()=>Fl,log:()=>Kd,mergeRealAndImagArrays:()=>Ud,prepareAndValidate:()=>lo,prepareSplitSize:()=>Zd,segment_util:()=>f,shouldFuse:()=>_c,slice_util:()=>c,splitRealAndImagArrays:()=>qd,tupleValuesAreOne:()=>cu,upcastType:()=>ya,validateInput:()=>co,validateUpdateShape:()=>po,warn:()=>Hd});var y={};n.r(y),n.d(y,{nonMaxSuppressionV3Impl:()=>Uc,nonMaxSuppressionV4Impl:()=>qc,nonMaxSuppressionV5Impl:()=>jc,whereImpl:()=>cc});var b={};n.r(b),n.d(b,{Abs:()=>Le,Acos:()=>Pe,Acosh:()=>ze,AdadeltaOptimizer:()=>_i,AdagradOptimizer:()=>Mi,AdamOptimizer:()=>Oi,AdamaxOptimizer:()=>Pi,Add:()=>Ve,AddN:()=>We,All:()=>He,Any:()=>Ke,ArgMax:()=>Ue,ArgMin:()=>qe,Asin:()=>je,Asinh:()=>Ge,Atan:()=>Ye,Atan2:()=>Xe,Atanh:()=>Je,AvgPool:()=>Qe,AvgPool3D:()=>et,AvgPool3DGrad:()=>tt,AvgPoolGrad:()=>Ze,BatchMatMul:()=>nt,BatchToSpaceND:()=>rt,Bincount:()=>at,BroadcastTo:()=>st,Cast:()=>ot,Ceil:()=>it,ClipByValue:()=>ut,Complex:()=>lt,ComplexAbs:()=>pt,Concat:()=>ct,Conv2D:()=>dt,Conv2DBackpropFilter:()=>ht,Conv2DBackpropInput:()=>mt,Conv3D:()=>ft,Conv3DBackpropFilterV2:()=>gt,Conv3DBackpropInputV2:()=>yt,Cos:()=>bt,Cosh:()=>wt,CropAndResize:()=>vt,Cumsum:()=>xt,DataStorage:()=>R,DenseBincount:()=>Nt,DepthToSpace:()=>kt,DepthwiseConv2dNative:()=>St,DepthwiseConv2dNativeBackpropFilter:()=>Et,DepthwiseConv2dNativeBackpropInput:()=>Tt,Diag:()=>At,Dilation2D:()=>_t,Dilation2DBackpropFilter:()=>Mt,Dilation2DBackpropInput:()=>It,ENV:()=>Ce,Elu:()=>Dt,EluGrad:()=>Ot,Environment:()=>De,Equal:()=>Ct,Erf:()=>Ft,Exp:()=>Rt,ExpandDims:()=>Bt,Expm1:()=>Lt,FFT:()=>Pt,Fill:()=>zt,FlipLeftRight:()=>Vt,Floor:()=>Wt,FloorDiv:()=>Ht,FromPixels:()=>Ir,FusedBatchNorm:()=>Kt,FusedConv2D:()=>Dr,FusedDepthwiseConv2D:()=>Or,GatherNd:()=>qt,GatherV2:()=>Ut,Greater:()=>jt,GreaterEqual:()=>Gt,IFFT:()=>Jt,Identity:()=>Yt,Imag:()=>Xt,IsFinite:()=>Qt,IsInf:()=>Zt,IsNan:()=>en,KernelBackend:()=>B,LRN:()=>dn,LRNGrad:()=>hn,LeakyRelu:()=>tn,Less:()=>nn,LessEqual:()=>rn,LinSpace:()=>an,Log:()=>sn,Log1p:()=>on,LogSoftmax:()=>cn,LogicalAnd:()=>un,LogicalNot:()=>ln,LogicalOr:()=>pn,Max:()=>mn,MaxPool:()=>gn,MaxPool3D:()=>bn,MaxPool3DGrad:()=>wn,MaxPoolGrad:()=>yn,MaxPoolWithArgmax:()=>xn,Maximum:()=>fn,Mean:()=>vn,Min:()=>Nn,Minimum:()=>kn,MirrorPad:()=>Sn,Mod:()=>En,MomentumOptimizer:()=>Vi,Multinomial:()=>Tn,Multiply:()=>An,Neg:()=>_n,NonMaxSuppressionV3:()=>Mn,NonMaxSuppressionV4:()=>$n,NonMaxSuppressionV5:()=>Dn,NotEqual:()=>In,OP_SCOPE_SUFFIX:()=>La,OneHot:()=>Fn,OnesLike:()=>On,Optimizer:()=>Ai,Pack:()=>Cn,PadV2:()=>Rn,Pool:()=>Bn,Pow:()=>Ln,Prelu:()=>Pn,Prod:()=>zn,RMSPropOptimizer:()=>Wi,Range:()=>Vn,Rank:()=>ca,Real:()=>Wn,RealDiv:()=>$t,Reciprocal:()=>Hn,Reduction:()=>od,Relu:()=>Kn,Relu6:()=>Jn,Reshape:()=>Un,ResizeBilinear:()=>Gn,ResizeBilinearGrad:()=>Yn,ResizeNearestNeighbor:()=>qn,ResizeNearestNeighborGrad:()=>jn,Reverse:()=>Xn,RotateWithOffset:()=>Mr,Round:()=>Qn,Rsqrt:()=>Zn,SGDOptimizer:()=>zi,ScatterNd:()=>er,Select:()=>tr,Selu:()=>nr,Sigmoid:()=>ir,Sign:()=>or,Sin:()=>ar,Sinh:()=>sr,Slice:()=>rr,Softmax:()=>hr,Softplus:()=>ur,SpaceToBatchND:()=>cr,SparseToDense:()=>yr,SplitV:()=>dr,Sqrt:()=>lr,Square:()=>fr,SquaredDifference:()=>mr,Step:()=>_r,StridedSlice:()=>br,Sub:()=>gr,Sum:()=>pr,Tan:()=>wr,Tanh:()=>xr,Tensor:()=>la,TensorBuffer:()=>sa,Tile:()=>vr,TopK:()=>Nr,Transpose:()=>kr,Unique:()=>Sr,Unpack:()=>Er,UnsortedSegmentSum:()=>Tr,Variable:()=>pa,ZerosLike:()=>Ar,_FusedMatMul:()=>$r,abs:()=>Fi,acos:()=>Hi,acosh:()=>Ki,add:()=>di,addN:()=>Ui,all:()=>qi,any:()=>ji,argMax:()=>Gi,argMin:()=>Yi,asin:()=>Ji,asinh:()=>Xi,atan:()=>Qi,atan2:()=>Zi,atanh:()=>eu,avgPool:()=>fu,avgPool3d:()=>gu,backend:()=>pi,backend_util:()=>g,basicLSTMCell:()=>vu,batchNorm:()=>ku,batchNorm2d:()=>Su,batchNorm3d:()=>Eu,batchNorm4d:()=>Tu,batchToSpaceND:()=>Nu,bincount:()=>Au,booleanMaskAsync:()=>hc,broadcastTo:()=>_u,browser:()=>u,buffer:()=>Fs,cast:()=>Cs,ceil:()=>Iu,clipByValue:()=>Mu,clone:()=>Rs,complex:()=>za,concat:()=>yu,concat1d:()=>$u,concat2d:()=>Du,concat3d:()=>Ou,concat4d:()=>Fu,conv1d:()=>Ru,conv2d:()=>Cu,conv2dTranspose:()=>Lu,conv3d:()=>Pu,conv3dTranspose:()=>Vu,copyRegisteredKernels:()=>Hr,cos:()=>Wu,cosh:()=>Hu,cosineWindow:()=>Nc,cumsum:()=>Ku,customGrad:()=>Si,denseBincount:()=>Uu,deprecationWarn:()=>Go,depthToSpace:()=>qu,depthwiseConv2d:()=>ju,device_util:()=>s,diag:()=>Gu,dilation2d:()=>Yu,disableDeprecationWarnings:()=>jo,dispose:()=>ei,disposeVariables:()=>Yo,div:()=>mi,divNoNan:()=>Qu,dot:()=>Zu,dropout:()=>xc,elu:()=>el,enableDebugMode:()=>qo,enableProdMode:()=>Uo,enclosingPowerOfTwo:()=>vc,engine:()=>Jo,env:()=>Oe,equal:()=>Ju,erf:()=>tl,exp:()=>nl,expandDims:()=>rl,expm1:()=>al,eye:()=>ol,fft:()=>Hp,fill:()=>Ii,findBackend:()=>ii,findBackendFactory:()=>ui,floor:()=>il,floorDiv:()=>hi,fused:()=>m,gather:()=>ul,gatherND:()=>wc,gather_util:()=>l,getBackend:()=>si,getGradient:()=>Br,getKernel:()=>Rr,getKernelsForBackend:()=>Lr,grad:()=>wi,grads:()=>xi,greater:()=>ll,greaterEqual:()=>pl,ifft:()=>Kp,imag:()=>cl,image:()=>bd,inTopKAsync:()=>kc,io:()=>o,irfft:()=>Up,isFinite:()=>dl,isInf:()=>hl,isNaN:()=>ml,keep:()=>ti,kernel_impls:()=>y,leakyRelu:()=>fl,less:()=>gl,lessEqual:()=>yl,linalg:()=>wd,linspace:()=>bl,localResponseNormalization:()=>wl,log:()=>xl,log1p:()=>vl,logSigmoid:()=>Sl,logSoftmax:()=>Al,logSumExp:()=>Rl,logicalAnd:()=>Bl,logicalNot:()=>Ll,logicalOr:()=>Pl,logicalXor:()=>zl,losses:()=>xd,matMul:()=>to,math:()=>i,max:()=>El,maxPool:()=>Vl,maxPool3d:()=>Wl,maxPoolWithArgmax:()=>Hl,maximum:()=>Li,mean:()=>Kl,memory:()=>Xo,min:()=>Ul,minimum:()=>ql,mirrorPad:()=>jl,mod:()=>Gl,moments:()=>Yl,movingAverage:()=>gc,mul:()=>fi,multiRNNCell:()=>Jl,multinomial:()=>Xl,neg:()=>Nl,nextFrame:()=>Sd,norm:()=>fc,notEqual:()=>Ql,oneHot:()=>no,ones:()=>ep,onesLike:()=>tp,op:()=>Pa,outerProduct:()=>np,pad:()=>rp,pad1d:()=>ap,pad2d:()=>sp,pad3d:()=>op,pad4d:()=>ip,pool:()=>lp,pow:()=>$i,prelu:()=>pp,print:()=>Bs,prod:()=>cp,profile:()=>Qo,rand:()=>dp,randomGamma:()=>yp,randomNormal:()=>bp,randomUniform:()=>wp,range:()=>xp,ready:()=>ai,real:()=>vp,reciprocal:()=>Np,registerBackend:()=>li,registerGradient:()=>zr,registerKernel:()=>Pr,relu:()=>kp,relu6:()=>Sp,removeBackend:()=>oi,reshape:()=>mu,reverse:()=>Ep,reverse1d:()=>Tp,reverse2d:()=>Ap,reverse3d:()=>_p,reverse4d:()=>Ip,rfft:()=>jp,round:()=>Mp,rsqrt:()=>$p,scalar:()=>Ti,scatterND:()=>yc,scatter_util:()=>p,selu:()=>Dp,separableConv2d:()=>Op,serialization:()=>d,setBackend:()=>ri,setPlatform:()=>ci,setdiff1dAsync:()=>Fp,sigmoid:()=>bu,sign:()=>Cp,signal:()=>yd,sin:()=>Rp,sinh:()=>Bp,slice:()=>wu,slice1d:()=>Lp,slice2d:()=>Pp,slice3d:()=>zp,slice4d:()=>Vp,slice_util:()=>c,softmax:()=>Wp,softplus:()=>kl,spaceToBatchND:()=>up,sparseToDense:()=>bc,spectral:()=>gd,split:()=>qp,sqrt:()=>gi,square:()=>yi,squaredDifference:()=>Gp,squeeze:()=>Yp,stack:()=>Jp,step:()=>Xp,stridedSlice:()=>Qp,sub:()=>Di,sum:()=>Tl,sumOutType:()=>ba,tan:()=>Zp,tanh:()=>xu,tensor:()=>Wa,tensor1d:()=>ec,tensor2d:()=>tc,tensor3d:()=>so,tensor4d:()=>nc,tensor5d:()=>rc,tensor6d:()=>ac,tensor_util:()=>a,test_util:()=>h,tidy:()=>Zo,tile:()=>sl,time:()=>ni,topk:()=>sc,train:()=>Nd,transpose:()=>ro,truncatedNormal:()=>oc,unique:()=>ic,unregisterGradient:()=>Wr,unregisterKernel:()=>Vr,unsortedSegmentSum:()=>uc,unstack:()=>lc,upcastType:()=>ya,util:()=>r,valueAndGrad:()=>vi,valueAndGrads:()=>Ni,variable:()=>pc,variableGrads:()=>ki,version_core:()=>Ko,where:()=>Xu,whereAsync:()=>dc,zeros:()=>Zl,zerosLike:()=>bi});var w={};n.r(w),n.d(w,{json:()=>gh});var x={};n.r(x),n.d(x,{json:()=>yh});var v={};n.r(v),n.d(v,{json:()=>bh});var N={};n.r(N),n.d(N,{json:()=>wh});var k={};n.r(k),n.d(k,{json:()=>xh});var S={};n.r(S),n.d(S,{json:()=>vh});var E={};n.r(E),n.d(E,{json:()=>Nh});var T={};n.r(T),n.d(T,{json:()=>kh});var A={};n.r(A),n.d(A,{json:()=>Sh});var _={};n.r(_),n.d(_,{json:()=>Eh});var I={};n.r(I),n.d(I,{json:()=>Th});var M={};n.r(M),n.d(M,{json:()=>Ah});var $={};n.r($),n.d($,{json:()=>_h});var D={};n.r(D),n.d(D,{json:()=>Ih});var O={};n.r(O),n.d(O,{json:()=>Mh});var F={};n.r(F),n.d(F,{json:()=>$h});var C={};n.r(C),n.d(C,{json:()=>Dh});class R{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class B{refCount(e){return L("refCount")}incRef(e){return L("incRef")}timerAvailable(){return!0}time(e){return L("time")}read(e){return L("read")}readSync(e){return L("readSync")}numDataIds(){return L("numDataIds")}disposeData(e,t){return L("disposeData")}write(e,t,n){return L("write")}move(e,t,n,r,a){return L("move")}memory(){return L("memory")}floatPrecision(){return L("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return L("dispose")}}function L(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function P(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function z(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function V(e,t,n){return Math.max(e,Math.min(t,n))}function W(e){return e%2==0?e:e+1}function H(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function K(e,t){const n=Math.random();return t*n+(1-n)*e}function U(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function j(e,t,n=""){q(Q(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function G(e){q(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Y(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||he(e)&&!n)for(let r=0;r<e.length;++r)Y(e[r],t,n);else t.push(e);return t}function J(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function X(e){return 0===e.length}function Q(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Z(e){return e%1==0}function ee(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function te(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ne(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return P(t),t}function re(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ae(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()}))}function se(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function oe(e,t){const n=t.length;return q((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),q(e.every((e=>Z(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function ie(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:oe(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function ue(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function le(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function pe(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ce(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function de(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function he(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function me(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function fe(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function ge(e){return"string"==typeof e||e instanceof String}function ye(e){return"boolean"==typeof e}function be(e){return"number"==typeof e}function we(e){return Array.isArray(e)?we(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":be(e)?"float32":ge(e)?"string":ye(e)?"bool":"float32"}function xe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ve(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Ne(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ke(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=ke(e+t*o,s,n)}return r}function Se(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return ke(0,e,t)}function Ee(e,t){const n=Te(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Te(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ae(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Se(e,new Float32Array(n));if("int32"===t)return Se(e,new Int32Array(n));if("bool"===t)return Se(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function _e(e){e.forEach((t=>{q(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ie(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Me(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function $e(e){return e&&e.then&&"function"==typeof e.then}class De{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if($e(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Oe(){return Ce}let Fe,Ce=null;function Re(){if(null==Fe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Fe=e}return Fe}function Be(e,t){const n=function(){const e=Re();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Le="Abs",Pe="Acos",ze="Acosh",Ve="Add",We="AddN",He="All",Ke="Any",Ue="ArgMax",qe="ArgMin",je="Asin",Ge="Asinh",Ye="Atan",Je="Atanh",Xe="Atan2",Qe="AvgPool",Ze="AvgPoolGrad",et="AvgPool3D",tt="AvgPool3DGrad",nt="BatchMatMul",rt="BatchToSpaceND",at="Bincount",st="BroadcastTo",ot="Cast",it="Ceil",ut="ClipByValue",lt="Complex",pt="ComplexAbs",ct="Concat",dt="Conv2D",ht="Conv2DBackpropFilter",mt="Conv2DBackpropInput",ft="Conv3D",gt="Conv3DBackpropFilterV2",yt="Conv3DBackpropInputV2",bt="Cos",wt="Cosh",xt="Cumsum",vt="CropAndResize",Nt="DenseBincount",kt="DepthToSpace",St="DepthwiseConv2dNative",Et="DepthwiseConv2dNativeBackpropFilter",Tt="DepthwiseConv2dNativeBackpropInput",At="Diag",_t="Dilation2D",It="Dilation2DBackpropInput",Mt="Dilation2DBackpropFilter",$t="RealDiv",Dt="Elu",Ot="EluGrad",Ft="Erf",Ct="Equal",Rt="Exp",Bt="ExpandDims",Lt="Expm1",Pt="FFT",zt="Fill",Vt="FlipLeftRight",Wt="Floor",Ht="FloorDiv",Kt="FusedBatchNorm",Ut="GatherV2",qt="GatherNd",jt="Greater",Gt="GreaterEqual",Yt="Identity",Jt="IFFT",Xt="Imag",Qt="IsFinite",Zt="IsInf",en="IsNan",tn="LeakyRelu",nn="Less",rn="LessEqual",an="LinSpace",sn="Log",on="Log1p",un="LogicalAnd",ln="LogicalNot",pn="LogicalOr",cn="LogSoftmax",dn="LRN",hn="LRNGrad",mn="Max",fn="Maximum",gn="MaxPool",yn="MaxPoolGrad",bn="MaxPool3D",wn="MaxPool3DGrad",xn="MaxPoolWithArgmax",vn="Mean",Nn="Min",kn="Minimum",Sn="MirrorPad",En="Mod",Tn="Multinomial",An="Multiply",_n="Neg",In="NotEqual",Mn="NonMaxSuppressionV3",$n="NonMaxSuppressionV4",Dn="NonMaxSuppressionV5",On="OnesLike",Fn="OneHot",Cn="Pack",Rn="PadV2",Bn="Pool",Ln="Pow",Pn="Prelu",zn="Prod",Vn="Range",Wn="Real",Hn="Reciprocal",Kn="Relu",Un="Reshape",qn="ResizeNearestNeighbor",jn="ResizeNearestNeighborGrad",Gn="ResizeBilinear",Yn="ResizeBilinearGrad",Jn="Relu6",Xn="Reverse",Qn="Round",Zn="Rsqrt",er="ScatterNd",tr="Select",nr="Selu",rr="Slice",ar="Sin",sr="Sinh",or="Sign",ir="Sigmoid",ur="Softplus",lr="Sqrt",pr="Sum",cr="SpaceToBatchND",dr="SplitV",hr="Softmax",mr="SquaredDifference",fr="Square",gr="Sub",yr="SparseToDense",br="StridedSlice",wr="Tan",xr="Tanh",vr="Tile",Nr="TopK",kr="Transpose",Sr="Unique",Er="Unpack",Tr="UnsortedSegmentSum",Ar="ZerosLike",_r="Step",Ir="FromPixels",Mr="RotateWithOffset",$r="_FusedMatMul",Dr="FusedConv2D",Or="FusedDepthwiseConv2D",Fr=Be("kernelRegistry",(()=>new Map)),Cr=Be("gradRegistry",(()=>new Map));function Rr(e,t){const n=Kr(e,t);return Fr.get(n)}function Br(e){return Cr.get(e)}function Lr(e){const t=Fr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function Pr(e){const{kernelName:t,backendName:n}=e,r=Kr(t,n);Fr.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),Fr.set(r,e)}function zr(e){const{kernelName:t}=e;Cr.has(t)&&Oe().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),Cr.set(t,e)}function Vr(e,t){const n=Kr(e,t);if(!Fr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Fr.delete(n)}function Wr(e){if(!Cr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Cr.delete(e)}function Hr(e,t){Lr(e).forEach((e=>{Pr(Object.assign({},e,{backendName:t}))}))}function Kr(e,t){return`${t}_${e}`}function Ur(e,t){return"string"===t?Yr(e):qr([e],t)}function qr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Y(e)),Oe().getBool("DEBUG")&&pe(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function jr(){return Oe().platform.now()}function Gr(e,t){return Oe().platform.fetch(e,t)}function Yr(e,t="utf-8"){return t=t||"utf-8",Oe().platform.encode(e,t)}function Jr(e,t="utf-8"){return t=t||"utf-8",Oe().platform.decode(e,t)}class Xr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Zr)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const o=jr();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:jr()-o})}if(Oe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Qr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Qr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Zr{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?re(`${r}ms`,9):r.error,i=re(e,25),u=t.rank,l=t.size,p=re(t.shape.toString(),14);let c="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;c+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${p}\t%c${l}\t%c${c}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function ea(e,t,n,r){const a=Ne(t),s=function(e,t,n,r){const a=J(t),s=r[r.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?aa(e):e;if(i>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],ta(u[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,i=ra(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function ta(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:ge(e)?`'${e}'`:"bool"===n?na(e):parseFloat(e.toFixed(7)).toString(),re(r,t)}function na(e){return 0===e?"false":"true"}function ra(e,t,n,r,a,s=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u)return"complex64"===n?[ta(aa(e)[0],0,n)]:"bool"===n?[na(e[0])]:[e[0].toString()];if(1===u){if(i>20){const t=3*o;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(r=aa(r),s=aa(s)),["["+r.map(((e,t)=>ta(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>ta(e,a[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?aa(e):Array.from(e)).map(((e,t)=>ta(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),p=r.slice(1),c=r[0]*o,d=[];if(i>20){for(let t=0;t<3;t++){const r=t*c,s=r+c;d.push(...ra(e.slice(r,s),l,n,p,a,!1))}d.push("...");for(let t=i-3;t<i;t++){const r=t*c,s=r+c;d.push(...ra(e.slice(r,s),l,n,p,a,t===i-1))}}else for(let t=0;t<i;t++){const r=t*c,s=r+c;d.push(...ra(e.slice(r,s),l,n,p,a,t===i-1))}const h=2===u?",":"";d[0]="["+d[0]+h;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+h;let m=",\n";for(let e=2;e<u;e++)m+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":m),d}function aa(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class sa{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=J(e),null!=n){const e=n.length;q(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||le(t,this.size),this.strides=Ne(e)}set(e,...t){0===t.length&&(t=[0]),q(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return oa().makeTensor(this.values,this.shape,this.dtype)}}let oa=null,ia=null,ua=null;class la{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=J(e),this.strides=Ne(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ia.buffer(this.shape,this.dtype,e)}bufferSync(){return ia.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Se(this.shape,e)}arraySync(){return Se(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=oa().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Jr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=oa().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Jr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await oa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(oa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ia.print(this,e)}clone(){return this.throwIfDisposed(),ia.clone(this)}toString(e=!1){return ea(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ia.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),oa().makeVariable(this,e,t,n)}}Object.defineProperty(la,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Be("Tensor",(()=>la));class pa extends la{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Q(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);oa().disposeTensor(this),this.dataId=e.dataId,oa().incRef(this,null)}dispose(){oa().disposeVariable(this),this.isDisposedInternal=!0}}var ca,da,ha,ma,fa;Object.defineProperty(pa,Symbol.hasInstance,{value:e=>e instanceof la&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ca||(ca={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(da||(da={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ha||(ha={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ma||(ma={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(fa||(fa={}));const ga={float32:ma,int32:da,bool:ha,complex64:fa};function ya(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ga[e][t]}function ba(e){return ya(e,"int32")}function wa(e,t){if(e.dtype===t.dtype)return[e,t];const n=ya(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function xa(e,t){q(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function va(e,t){return t.some((t=>t.id===e.id))}function Na(e){const t=[];return ka(e,t,new Set),t}function ka(e,t,n){if(null==e)return;if(e instanceof la)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),ka(r,t,n))}}function Sa(e){return null!=e.kernelName}class Ea{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ta{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ea}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Xr(this.backendInstance),!0}setupRegisteredKernels(){Lr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Lr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof B||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ta.nextTensorId++}nextVariableId(){return Ta.nextVariableId++}clone(e){const t=_a.runKernel(Yt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return _a.runKernel(ot,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==Rr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Sa(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Sa(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=Rr(t,this.backendName);q(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:p}=e,c=Sa(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),r&&this.addTapeNode(u,l,t,c,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Br(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(q(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&ge(e[0])&&(a=e.map((e=>Yr(e))));const s=r.write(a,t,n),o=new la(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=fe(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a=new la(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new pa(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*me(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof pa||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*me(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=Br(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Te(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Na(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(q(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));q(a instanceof la,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Ee(J(e),"float32");return _a.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!Q(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Ia);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return q(xe(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;q(t.every((e=>e instanceof la)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),q(n.value instanceof la,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),q(xe(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];q(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),q(s.every((e=>e instanceof la)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=jr(),n=await this.backend.time(e);return n.wallMs=jr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ea;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Aa(){const e=Re();if(null==e._tfengine){const t=new De(e);e._tfengine=new Ta(t)}var t;return t=e._tfengine.ENV,Ce=t,oa=()=>e._tfengine,e._tfengine}Ta.nextTensorId=0,Ta.nextVariableId=0;const _a=Aa();function Ia(e,t){const n={a:e,b:t};return _a.runKernel(Ve,n)}function Ma(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function $a(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Da=Oe();function Oa(e,t){let n=e;if(he(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||he(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Oe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Fa(e,r,[]),r}function Fa(e,t,n){if(n=n||[],!Array.isArray(e)&&!he(e))return void q(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));q(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),q(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Fa(e[t],r,n.concat(t))}function Ca(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ra(e,t,n,r="numeric"){if(e instanceof la)return Ca(r,e.dtype,t,n),e;let a=we(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Ca(r,a,t,n),null==e||!he(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Oa(e,a);he(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?qr(e,a):Y(e,[],!0);return _a.makeTensor(o,s,a)}function Ba(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ra(e,`${t}[${a}]`,n,r)))}Da.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Da.registerFlag("IS_BROWSER",(()=>$a())),Da.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Da.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Da.registerFlag("PROD",(()=>!1)),Da.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Da.getBool("DEBUG"))),Da.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Da.registerFlag("IS_TEST",(()=>!1)),Da.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));const La="__op";function Pa(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=La;const a=(...e)=>{_a.startScope(n);try{const t=r(...e);return $e(t)&&console.error("Cannot return a Promise inside of tidy."),_a.endScope(t),t}catch(e){throw _a.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const za=Pa({complex_:function(e,t){const n=Ra(e,"real","complex"),r=Ra(t,"imag","complex");j(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return _a.runKernel(lt,a)}});function Va(e,t,n,r){if(null==r&&(r=we(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!he(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){_e(t);const e=J(t),r=J(n);q(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==J(t.slice(e));q(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return he(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?qr(e,r):Y(e,[],!0),_a.makeTensor(e,t,r)}function Wa(e,t,n){return Va(e,t,Oa(e,n),n)}const Ha={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ka(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:qa(await Promise.all(r)),specs:n}}function Ua(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=J(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=Ha[n.dtype],p=e.slice(a,a+u*i),c="uint8"===n.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Qa()),l=r(c)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(c.length);for(let e=0;e<c.length;e++){const t=c[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=J(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Ha[o],s=e.slice(a,a+u*r);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Wa(e,i,"float32"),o=Wa(r,i,"float32");n[t]=za(a,o),a.dispose(),o.dispose()}}a+=u*r}"complex64"!==o&&(n[t]=Wa(l,i,o))}return n}function qa(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const ja="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ga(e){return ja?Buffer.byteLength(e):new Blob([e]).size}function Ya(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ja(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Xa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ga(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ga(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Qa(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class Za{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Za.instance&&(Za.instance=new Za),Za.instance}static registerSaveRouter(e){Za.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Za.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Za.getHandlers(e,"save")}static getLoadHandlers(e,t){return Za.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Za.getInstance().loadRouters:Za.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const es=e=>Za.registerSaveRouter(e),ts=e=>Za.registerLoadRouter(e),ns=e=>Za.getSaveHandlers(e),rs=(e,t)=>Za.getLoadHandlers(e,t),as="tensorflowjs",ss="models_store",os="model_info_store";function is(){if(!Oe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function us(e){const t=e.result;t.createObjectStore(ss,{keyPath:"modelPath"}),t.createObjectStore(os,{keyPath:"modelPath"})}class ls{constructor(e){if(this.indexedDB=is(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(as,1);r.onupgradeneeded=()=>us(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(ss,"readonly"),r=t.objectStore(ss).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Xa(t),s=a.transaction(os,"readwrite");let o=s.objectStore(os);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(ss,"readwrite");const i=u.objectStore(ss).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(os);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}ls.URL_SCHEME="indexeddb://";const ps=e=>{return Oe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ls.URL_SCHEME)?(t=e.slice(ls.URL_SCHEME.length),new ls(t)):null;var t};Za.registerSaveRouter(ps),Za.registerLoadRouter(ps);class cs{constructor(){this.indexedDB=is()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(as,1);n.onupgradeneeded=()=>us(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(os,"readonly"),s=a.objectStore(os).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ls.URL_SCHEME)?t.slice(ls.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(as,1);r.onupgradeneeded=()=>us(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(os,"readwrite"),o=s.objectStore(os),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(ss,"readwrite");const r=u.objectStore(ss).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const ds="/",hs="tensorflowjs_models",ms="info",fs="model_topology",gs="weight_specs",ys="weight_data",bs="model_metadata";function ws(e){return{info:[hs,e,ms].join(ds),topology:[hs,e,fs].join(ds),weightSpecs:[hs,e,gs].join(ds),weightData:[hs,e,ys].join(ds),modelMetadata:[hs,e,bs].join(ds)}}function xs(e){const t=e.split(ds);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ds)}class vs{constructor(e){if(!Oe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ws(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Xa(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(ja)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(ja){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}vs.URL_SCHEME="localstorage://";const Ns=e=>{return Oe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vs.URL_SCHEME)?(t=e.slice(vs.URL_SCHEME.length),new vs(t)):null;var t};Za.registerSaveRouter(Ns),Za.registerLoadRouter(Ns);class ks{constructor(){q(Oe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),q("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=hs+ds,n=ds+ms;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[xs(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=ws(e=(t=e).startsWith(vs.URL_SCHEME)?t.slice(vs.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const Ss="://";class Es{constructor(){this.managers={}}static getInstance(){return null==Es.instance&&(Es.instance=new Es),Es.instance}static registerManager(e,t){q(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Ss)&&(e=e.slice(0,e.indexOf(Ss))),q(e.length>0,(()=>"scheme must not be an empty string."));const n=Es.getInstance();q(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Ts(e){if(-1===e.indexOf(Ss))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Es.getSchemes().join(",")}`);return{scheme:e.split(Ss)[0],path:e.split(Ss)[1]}}async function As(e,t,n=!1){q(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Za.getLoadHandlers(e);q(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),q(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Za.getSaveHandlers(t);q(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),q(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=Ts(e).scheme,u=Ts(e).path,l=i===Ts(e).scheme,p=await a.load();n&&l&&await Es.getManager(i).removeModel(u);const c=await o.save(p);return n&&!l&&await Es.getManager(i).removeModel(u),c.modelArtifactsInfo}async function _s(){const e=Es.getSchemes(),t={};for(const n of e){const e=await Es.getManager(n).listModels();for(const r in e)t[n+Ss+r]=e[r]}return t}async function Is(e){const t=Ts(e);return Es.getManager(t.scheme).removeModel(t.path)}async function Ms(e,t){return As(e,t,!1)}async function $s(e,t){return As(e,t,!0)}class Ds{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Oe().get("IS_BROWSER")){Oe().setPlatform("browser",new Ds);try{Es.registerManager(vs.URL_SCHEME,new ks)}catch(e){}try{Es.registerManager(ls.URL_SCHEME,new cs)}catch(e){}}let Os;function Fs(e,t="float32",n){return t=t||"float32",_e(e),new sa(e,t,n)}Oe().get("IS_NODE")&&Oe().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Oe().global.fetch?Oe().global.fetch(e,t):(null==Os&&(Os=n(352)),Os(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Cs=Pa({cast_:function(e,t){const n=Ra(e,"x","cast");if(!ce(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return _a.runKernel(ot,r,a)}}),Rs=Pa({clone_:function(e){const t={x:Ra(e,"x","clone","string_or_numeric")};return _a.runKernel(Yt,t)}});function Bs(e,t=!1){console.log(e.toString(t))}function Ls(e){return new Promise((e=>setTimeout(e))).then(e)}Aa(),ia={buffer:Fs,cast:Cs,clone:Rs,print:Bs};class Ps{constructor(e){if(!Oe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ps.URL_SCHEME)&&(e=e.slice(Ps.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await Ls((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ls((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Xa(e)}}}}Ps.URL_SCHEME="downloads://";class zs{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),o=s.modelTopology;if(null==o)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:o});const i=s.weightsManifest;if(null==i)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(e){return void r(e)}const l=[],p=[],c=[];i.forEach((e=>{e.paths.forEach((e=>{p.push(e),c.push(null)})),l.push(...e.weights)})),i.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=p.indexOf(e);if(c[a]=r,-1===c.indexOf(null)){const e={modelTopology:o,weightSpecs:l,weightData:Ya(c),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>Ja(e.name))),a={};for(const s of e)s.paths.forEach((e=>{const s=Ja(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function Vs(e){return new zs(e)}function Ws(e,t,n,r){!function(e){q(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){q(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),q(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),q(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function Hs(e,t){null==t&&(t={});const n=null==t.fetchFunc?Oe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ws(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ws(a,t.onProgress,.5,1)}async function Ks(e,t="",n,r){return Us((e=>Hs(e,{requestInit:r})))(e,t,n)}function Us(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Ha[u]*J(e.shape),p=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(p(),o[n]=!0)})):p(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const p=await e(l),c={};let d=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=p[d+e].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(p[d+e]);o.set(t,i),i+=t.byteLength}s[e].forEach((e=>{const t=Ua(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)c[e]=t[e]})),d+=n})),c}}Za.registerSaveRouter((e=>Oe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ps.URL_SCHEME)?function(e="model"){return new Ps(e)}(e.slice(Ps.URL_SCHEME.length)):null));class qs{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(q("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Oe().platform.fetch,q(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&q(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Xa(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,o=t.format,i=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,p;if(null!=r){const e=await this.loadWeights(r);[l,p]=e}const c={modelTopology:n,weightSpecs:l,weightData:p,generatedBy:a,convertedBy:s,format:o};null!=i&&(c.signature=i),null!=u&&(c.userDefinedMetadata=u);const d=t.modelInitializer;return d&&(c.modelInitializer=d),c}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[s,Ya(await Hs(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function js(e){return null!=e.match(qs.URL_SCHEME_REGEX)}qs.URL_SCHEME_REGEX=/^https?:\/\//;const Gs=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>js(e))):js(e),n)return Ys(e,t)}return null};function Ys(e,t){return new qs(e,t)}function Js(e,t){return Ys(e,t)}Za.registerSaveRouter(Gs),Za.registerLoadRouter(Gs);class Xs{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Qs{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Zs(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Xs(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Xs({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Xs({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function eo(e){return new Qs(e)}const to=Pa({matMul_:function(e,t,n=!1,r=!1){let a=Ra(e,"a","matMul"),s=Ra(t,"b","matMul");[a,s]=wa(a,s);const o={a,b:s},i={transposeA:n,transposeB:r};return _a.runKernel(nt,o,i)}}),no=Pa({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ra(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return _a.runKernel(Fn,a,s)}}),ro=Pa({transpose_:function(e,t){const n=Ra(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),q(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{q(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return _a.runKernel(kr,r,a)}}),ao=Pa({confusionMatrix_:function(e,t,n){const r=Ra(e,"labels","confusionMatrix"),a=Ra(t,"predictions","confusionMatrix");q(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),q(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),q(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),q(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),q(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=no(Cs(r,"int32"),n),o=no(Cs(a,"int32"),n),i=ro(s),u=to(i,o);return Cs(u,"int32")}});function so(e,t,n){if(G(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Oa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Va(e,t,r,n)}let oo;async function io(e,t){let n=Ra(e,"img","toPixels");if(!(e instanceof la)){const e=n;n=Cs(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=o[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*i,t[1]=a*i,t[2]=a*i):t[r]=a*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const uo=Pa({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Rr(Ir,_a.backendName)){const n={pixels:e},r={numChannels:t};return _a.runKernel(Ir,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let p,c;if(o?p=e.getContext("2d").getImageData(0,0,u,l).data:r||n?p=e.data:(s||a||i)&&(null==oo&&(oo=document.createElement("canvas").getContext("2d")),oo.canvas.width=u,oo.canvas.height=l,oo.drawImage(e,0,0,u,l),p=oo.getImageData(0,0,u,l).data),4===t)c=new Int32Array(p);else{const e=u*l;c=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)c[n*t+e]=p[4*n+e]}return so(c,[l,u,t],"int32")}});function lo(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===J(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let e=0;e<a.length-1;++e)o*=a[e];const i=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=i[e],u.push(i[e]);const p=[...Ne(e.shape).map((e=>e/l)),1].slice(0,s);return[u,o,l,p]}function po(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function co(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}po(n,t,e)}function ho(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:J(t.shape)/i,sliceSize:o,strides:[...Ne(n.slice(0,a)),1],outputSize:J(n)}}function mo(e,t,n){const r=e.shape.length;q(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),q(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)q(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function fo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function go(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function yo(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function bo(e,t,n){return n<=e?n:n-(t-1)}function wo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function xo(e,t,n,r,a,s,o,i,u){const l=e.length;let p=new Array(l),c=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;p=vo(o,u,l,r,e),c=No(i,u,l,a,e),d=yo(s,u,l,e)}else for(let t=0;t<l;t++)p[t]=So(o,r,s,e,t,u),c[t]=Eo(i,a,s,e,t,u),d[t]=ko(s,t,u);return{begin:p,end:c,strides:d}}function vo(e,t,n,r,a){const s=[...a],o=wo(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=bo(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function No(e,t,n,r,a){const s=[...a],o=wo(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=bo(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=V(0,s[e],a[e])}return s}function ko(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function So(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=V(0,o,u-1),o}function Eo(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?V(0,o,u):V(-1,o,u-1),o}function To(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Ao(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function _o(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{q(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(q(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function Io(e,t,n,r,a,s,o,i,u){let l=t.slice(),p=n.slice(),c=r;null==r&&(c=new Array(l.length));const d=fo(o);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=e.length-l.length,m=fo(i),f=e.slice();m.forEach((e=>{l[e]=0,p[e]=1,f.splice(e,0,1)}));const{begin:g,end:y,strides:b}=xo(f,d,h,l,p,c,a,s,o);l=g,p=y,c=b;const w=fo(u);w.forEach((e=>{p[e]=l[e]+1,c[e]=1}));const x=go(l,p,c),v=x.filter(((e,t)=>-1===w.indexOf(t)));return{nonStrided:c.every((e=>1===e)),$begin:l,$end:p,$strides:c,size:x,newShape:f,outShape:v}}class Mo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class $o{constructor(){this.classNameMap={}}static getMap(){return null==$o.instance&&($o.instance=new $o),$o.instance}static register(e){$o.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Do(e){q(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),q("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),q(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),$o.register(e)}const Oo=.1;function Fo(e,t,n){return null==n&&(n=Co()),Ro(e,t,((e,t)=>zo(e,t,n)))}function Co(){return 32===_a.backend.floatPrecision()?.001:Oo}function Ro(e,t,n){let r=!0;if((he(e)||he(t))&&(r=!1),he(e)&&he(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Oa(e),r=Oa(t);if(!Q(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=he(e)?e:Y(e),s=he(t)?t:Y(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Bo(e,t){e().then((()=>t.fail()),(()=>t()))}function Lo(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return ge(e)||ge(e[0])||ge(t)||ge(t[0])?Ro(e,n,((e,t)=>e==t)):Ro(e,t,((e,t)=>zo(e,t,0)))}function Po(e,t,n){if(null==n&&(n=Co()),!zo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function zo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Vo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Wo(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Ho(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ho(n):e[t]=Yr(n)}return e}const Ko="3.2.0";function Uo(){Oe().set("PROD",!0)}function qo(){Oe().set("DEBUG",!0)}function jo(){Oe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Go(e){Oe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Yo(){_a.disposeVariables()}function Jo(){return _a}function Xo(){return _a.memory()}function Qo(e){return _a.profile(e)}function Zo(e,t){return _a.tidy(e,t)}function ei(e){Na(e).forEach((e=>e.dispose()))}function ti(e){return _a.keep(e)}function ni(e){return _a.time(e)}function ri(e){return _a.setBackend(e)}function ai(){return _a.ready()}function si(){return _a.backendName}function oi(e){_a.removeBackend(e)}function ii(e){return _a.findBackend(e)}function ui(e){return _a.findBackendFactory(e)}function li(e,t,n=1){return _a.registerBackend(e,t,n)}function pi(){return _a.backend}function ci(e,t){Oe().setPlatform(e,t)}ua=Go;const di=Pa({add_:function(e,t){let n=Ra(e,"a","add"),r=Ra(t,"b","add");[n,r]=wa(n,r);const a={a:n,b:r};return _a.runKernel(Ve,a)}}),hi=Pa({floorDiv_:function(e,t){let n=Ra(e,"a","floorDiv"),r=Ra(t,"b","floorDiv");[n,r]=wa(n,r);const a={a:n,b:r};return _a.runKernel(Ht,a)}}),mi=Pa({div_:function(e,t){let n=Ra(e,"a","div"),r=Ra(t,"b","div");if([n,r]=wa(n,r),"int32"===n.dtype&&"int32"===r.dtype)return hi(n,r);const a={a:n,b:r};return _a.runKernel($t,a,{})}}),fi=Pa({mul_:function(e,t){let n=Ra(e,"a","mul"),r=Ra(t,"b","mul");[n,r]=wa(n,r);const a={a:n,b:r};return _a.runKernel(An,a)}}),gi=Pa({sqrt_:function(e){const t={x:Ra(e,"x","sqrt")};return _a.runKernel(lr,t)}}),yi=Pa({square_:function(e){const t=Ra(e,"x","square");return _a.runKernel("Square",{x:t},{})}}),bi=Pa({zerosLike_:function(e){const t={x:Ra(e,"x","zerosLike")};return _a.runKernel(Ar,t)}});function wi(e){return q(xe(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Ra(t,"x","tf.grad","string_or_numeric"),a=null!=n?Ra(n,"dy","tf.grad"):null;return _a.tidy((()=>{const{value:t,grads:n}=_a.gradients((()=>e(r)),[r],a);return null!=a&&j(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ei(n),n[0]}))}}function xi(e){return q(xe(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{q(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ba(t,"args","tf.grads","string_or_numeric"),a=null!=n?Ra(n,"dy","tf.grads"):null;return _a.tidy((()=>{const{value:t,grads:n}=_a.gradients((()=>e(...r)),r,a);return null!=a&&j(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ei(n),n}))}}function vi(e){return q(xe(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{q(t instanceof la,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),q(null==n||n instanceof la,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:a}=_a.gradients((()=>e(t)),[t],n);return Ei(r),{grad:r[0],value:a}}}function Ni(e){return q(xe(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{q(Array.isArray(t)&&t.every((e=>e instanceof la)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),q(null==n||n instanceof la,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=_a.gradients((()=>e(...t)),t,n);return null!=n&&j(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ei(r.grads),r}}function ki(e,t){q(xe(e),(()=>"The f passed in variableGrads(f) must be a function")),q(null==t||Array.isArray(t)&&t.every((e=>e instanceof pa)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in _a.registeredVariables)t.push(_a.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;q((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:o}=_a.gradients(e,t,null,!0);q(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),q(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:s,grads:i}}function Si(e){return _a.customGrad(e)}function Ei(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Ti(e,t){if((he(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&he(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Va(e,[],[],t)}class Ai extends Mo{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return ei(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return ki(e,t)}dispose(){null!=this.iterations_&&ei(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ti(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ai,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class _i extends Ai{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=_a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Zo((()=>bi(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Zo((()=>bi(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Zo((()=>{const e=di(fi(s,this.rho),fi(yi(a),1-this.rho)),t=fi(mi(gi(di(o,this.epsilon)),gi(di(s,this.epsilon))),a),n=di(fi(o,this.rho),fi(yi(t),1-this.rho));s.assign(e),o.assign(n);const i=di(fi(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ei(this.accumulatedGrads.map((e=>e.variable))),ei(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Ii(e,t,n){const r={shape:e,value:t,dtype:n};return _a.runKernel(zt,{},r)}_i.className="Adadelta",Do(_i);class Mi extends Ai{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Zo((()=>Ii(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Zo((()=>{const e=di(s,yi(a));s.assign(e);const t=di(fi(mi(a,gi(di(e,_a.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ei(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Mi.className="Adagrad",Do(Mi);const $i=Pa({pow_:function(e,t){let n=Ra(e,"base","pow"),r=Ra(t,"exp","pow");[n,r]=wa(n,r);const a={a:n,b:r};return _a.runKernel(Ln,a)}}),Di=Pa({sub_:function(e,t){let n=Ra(e,"a","sub"),r=Ra(t,"b","sub");[n,r]=wa(n,r);const a={a:n,b:r};return _a.runKernel(gr,a)}});class Oi extends Ai{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Zo((()=>{this.accBeta1=Ti(t).variable(),this.accBeta2=Ti(n).variable()})),null==r&&(this.epsilon=_a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Zo((()=>{const n=Di(1,this.accBeta1),r=Di(1,this.accBeta2);t.forEach(((t,a)=>{const s=_a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Zo((()=>bi(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Zo((()=>bi(s).variable(!1)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=di(fi(i,this.beta1),fi(o,1-this.beta1)),p=di(fi(u,this.beta2),fi(yi(o),1-this.beta2)),c=mi(l,n),d=mi(p,r);i.assign(l),u.assign(p);const h=di(fi(mi(c,di(gi(d),this.epsilon)),-this.learningRate),s);s.assign(h)})),this.accBeta1.assign(fi(this.accBeta1,this.beta1)),this.accBeta2.assign(fi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ei(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ei(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Zo((()=>{this.accBeta1.assign($i(this.beta1,this.iterations_+1)),this.accBeta2.assign($i(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Oi.className="Adam",Do(Oi);const Fi=Pa({abs_:function(e){const t=Ra(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return _a.runKernel(pt,e)}{const e={x:t};return _a.runKernel(Le,e)}}});function Ci(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function Ri(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function Bi(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Li=Pa({maximum_:function(e,t){let n=Ra(e,"a","maximum"),r=Ra(t,"b","maximum");[n,r]=wa(n,r),"bool"===n.dtype&&(n=Cs(n,"int32"),r=Cs(r,"int32")),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(fn,a)}});class Pi extends Ai{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Zo((()=>{this.iteration=Ti(0).variable(),this.accBeta1=Ti(t).variable()})),null==r&&(this.epsilon=_a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Zo((()=>{const n=Di(1,this.accBeta1),r=mi(-this.learningRate,di(fi(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=_a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:bi(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:bi(s).variable(!1)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=di(fi(i,this.beta1),fi(o,1-this.beta1)),p=fi(u,this.beta2),c=Fi(o),d=Li(p,c);i.assign(l),u.assign(d);const h=di(fi(mi(r,n),mi(l,di(d,this.epsilon))),s);s.assign(h)})),this.iteration.assign(di(this.iteration,1)),this.accBeta1.assign(fi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ei(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ei(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Pi.className="Adamax",Do(Pi);class zi extends Ai{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=_a.registeredVariables[t];Zo((()=>{const e=di(fi(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ti(Ti(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}zi.className="SGD",Do(zi);class Vi extends zi{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ti(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Zo((()=>bi(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Zo((()=>{let e;const t=di(fi(this.m,a),s);e=this.useNesterov?di(fi(this.c,di(s,fi(t,this.m))),r):di(fi(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ei(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Vi.className="Momentum",Do(Vi);class Wi extends Ai{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=_a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=_a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Zo((()=>bi(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Zo((()=>bi(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Zo((()=>bi(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Zo((()=>{const e=di(fi(o,this.decay),fi(yi(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=di(fi(t,this.decay),fi(s,1-this.decay)),u=mi(fi(s,this.learningRate),gi(Di(e,di(yi(a),this.epsilon)))),l=di(fi(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(l);const p=Di(r,l);r.assign(p)}else{const e=di(fi(o,this.decay),fi(yi(s),1-this.decay)),t=di(fi(i,this.momentum),mi(fi(s,this.learningRate),gi(di(e,this.epsilon))));o.assign(e),i.assign(t);const n=Di(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ei(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ei(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ei(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Wi.className="RMSProp",Do(Wi);const Hi=Pa({acos_:function(e){const t={x:Ra(e,"x","acos")};return _a.runKernel(Pe,t)}}),Ki=Pa({acosh_:function(e){const t={x:Ra(e,"x","acosh")};return _a.runKernel(ze,t)}}),Ui=Pa({addN_:function(e){q(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),q(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ra(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!Q(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return _a.runKernel(We,r)}}),qi=Pa({all_:function(e,t=null,n=!1){const r={x:Ra(e,"x","all","bool")},a={axis:t,keepDims:n};return _a.runKernel(He,r,a)}}),ji=Pa({any_:function(e,t=null,n=!1){const r={x:Ra(e,"x","any","bool")},a={axis:t,keepDims:n};return _a.runKernel(Ke,r,a)}}),Gi=Pa({argMax_:function(e,t=0){const n={x:Ra(e,"x","argMax")},r={axis:t};return _a.runKernel(Ue,n,r)}}),Yi=Pa({argMin_:function(e,t=0){const n={x:Ra(e,"x","argMin")},r={axis:t};return _a.runKernel(qe,n,r)}}),Ji=Pa({asin_:function(e){const t={x:Ra(e,"x","asin")};return _a.runKernel(je,t)}}),Xi=Pa({asinh_:function(e){const t={x:Ra(e,"x","asinh")};return _a.runKernel(Ge,t)}}),Qi=Pa({atan_:function(e){const t={x:Ra(e,"x","atan")};return _a.runKernel(Ye,t)}}),Zi=Pa({atan2_:function(e,t){let n=Ra(e,"a","atan2"),r=Ra(t,"b","atan2");[n,r]=wa(n,r);const a={a:n,b:r};return _a.runKernel(Xe,a)}}),eu=Pa({atanh_:function(e){const t={x:Ra(e,"x","atanh")};return _a.runKernel(Je,t)}});function tu(e,t,n,r,a="NHWC",s){return au(e,[...t,e[3]],n,s,r,null,null,hu(a))}function nu(e,t,n,r,a,s,o="channelsLast"){const[i,u]=iu(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[i,u,e[1],e[1]]}return au(e,l,n,r,a,s,!1,o)}function ru(e,t,n,r,a,s,o="NDHWC"){const[i,u,l]=uu(t);let p,c;if("NDHWC"===o)c="channelsLast",p=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);c="channelsFirst",p=[i,u,l,e[1],e[1]]}return su(e,p,n,r,a,!1,c,s)}function au(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,l,p,c]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,p,c]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,c,l,p]=e}const[d,h,,m]=t,[f,g]=iu(n),[y,b]=iu(r),w=lu(d,y),x=lu(h,b),{padInfo:v,outHeight:N,outWidth:k}=function(e,t,n,r,a,s,o,i,u){let l,p,c;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=ou(e,t,n));const s=e[1];return[pu((e[0]-t+2*r)/n+1,a),pu((s-t+2*r)/n+1,a)]}([t,n],s,r,e,i);p=a[0],c=a[1]}else if("same"===e){p=Math.ceil(t/r),c=Math.ceil(n/a);const e=Math.max(0,(p-1)*r+s-t),i=Math.max(0,(c-1)*a+o-n),u=Math.floor(e/2),d=e-u,h=Math.floor(i/2);l={top:u,bottom:d,left:h,right:i-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),c=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],f="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:h,left:m,right:f,type:0===d&&0===h&&0===m&&0===f?"VALID":"EXPLICIT"},p=pu((t-s+d+h)/r+1,i),c=pu((n-o+m+f)/a+1,i)}}return{padInfo:l,outHeight:p,outWidth:c}}(a,l,p,f,g,w,x,s,i),S=o?m*c:m;let E;return"channelsFirst"===i?E=[u,S,N,k]:"channelsLast"===i&&(E=[u,N,k,S]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:p,inChannels:c,outHeight:N,outWidth:k,outChannels:S,padInfo:v,strideHeight:f,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:y,dilationWidth:b,inShape:e,outShape:E,filterShape:t}}function su(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,l,p,c,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,p,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,p,c]=e}const[h,m,f,,g]=t,[y,b,w]=uu(n),[x,v,N]=uu(r),k=lu(h,x),S=lu(m,v),E=lu(f,N),{padInfo:T,outDepth:A,outHeight:_,outWidth:I}=function(e,t,n,r,a,s,o,i,u,l,p){let c,d,h,m;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=ou(e,t,r));const o=e[1],i=e[2];return[pu((e[0]-t+2*a)/r+1,s),pu((o-t+2*a)/r+1,s),pu((i-t+2*a)/r+1,s),1]}([t,n,r,1],i,0,a,e,p);d=s[0],h=s[1],m=s[2]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/s),m=Math.ceil(r/o);const e=(d-1)*a+i-t,p=(h-1)*s+u-n,f=(m-1)*o+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(p/2),w=p-b,x=Math.floor(f/2);c={top:b,bottom:w,left:x,right:f-x,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);c={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-i+1)/a),h=Math.ceil((n-u+1)/s),m=Math.ceil((r-l+1)/o)}return{padInfo:c,outDepth:d,outHeight:h,outWidth:m}}(a,l,p,c,y,b,w,k,S,E,i),M=s?g*d:g;let $;return"channelsFirst"===o?$=[u,M,A,_,I]:"channelsLast"===o&&($=[u,A,_,I,M]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:p,inWidth:c,inChannels:d,outDepth:A,outHeight:_,outWidth:I,outChannels:M,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:w,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:k,effectiveFilterHeight:S,effectiveFilterWidth:E,dilationDepth:x,dilationHeight:v,dilationWidth:N,inShape:e,outShape:$,filterShape:t}}function ou(e,t,n,r=1){const a=lu(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function iu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function uu(e){return"number"==typeof e?[e,e,e]:e}function lu(e,t){return t<=1?e:e+(e-1)*(t-1)}function pu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function cu(e){const[t,n,r]=iu(e);return 1===t&&1===n&&1===r}function du(e,t){return cu(e)||cu(t)}function hu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const mu=Pa({reshape_:function(e,t){const n={x:Ra(e,"x","reshape","string_or_numeric")},r={shape:t};return _a.runKernel(Un,n,r)}}),fu=Pa({avgPool_:function(e,t,n,r,a){const s=Ra(e,"x","avgPool","float32");q(du(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=s,i=!1;3===s.rank&&(i=!0,o=mu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),q(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),null!=a&&q(Z(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let p=_a.runKernel(Qe,u,l);return p=Cs(p,s.dtype),i?mu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),gu=Pa({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const o=Ra(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=mu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),q(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),q("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&q(Z(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:i},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let c=_a.runKernel(et,l,p);return c=Cs(c,i.dtype),u?mu(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),yu=Pa({concat_:function(e,t=0){q(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ba(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Rs(n[0]);const r=n,a={axis:t};return _a.runKernel(ct,r,a)}}),bu=Pa({sigmoid_:function(e){const t={x:Ra(e,"x","sigmoid")};return _a.runKernel(ir,t)}}),wu=Pa({slice_:function(e,t,n){const r=Ra(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return _a.runKernel(rr,a,s)}}),xu=Pa({tanh_:function(e){const t={x:Ra(e,"x","tanh")};return _a.runKernel(xr,t)}}),vu=Pa({basicLSTMCell_:function(e,t,n,r,a,s){const o=Ra(e,"forgetBias","basicLSTMCell"),i=Ra(t,"lstmKernel","basicLSTMCell"),u=Ra(n,"lstmBias","basicLSTMCell"),l=Ra(r,"data","basicLSTMCell"),p=Ra(a,"c","basicLSTMCell"),c=Ra(s,"h","basicLSTMCell"),d=yu([l,c],1),h=to(d,i),m=di(h,u),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=wu(m,[0,0],y),w=wu(m,[0,g],y),x=wu(m,[0,2*g],y),v=wu(m,[0,3*g],y),N=di(fi(bu(b),xu(w)),fi(p,bu(di(o,x))));return[N,fi(xu(N),bu(v))]}}),Nu=Pa({batchToSpaceND_:function(e,t,n){const r=Ra(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));q(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),q(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),q(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},o={blockShape:t,crops:n};return _a.runKernel(rt,s,o)}}),ku=Pa({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const o=Ra(e,"x","batchNorm"),i=Ra(t,"mean","batchNorm"),u=Ra(n,"variance","batchNorm");let l,p;null!=a&&(l=Ra(a,"scale","batchNorm")),null!=r&&(p=Ra(r,"offset","batchNorm")),q(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),q(null==p||i.rank===p.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),q(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const c={x:function(e){let t;return t=0===e.rank||1===e.rank?mu(e,[1,1,1,e.size]):2===e.rank?mu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?mu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:p,mean:i,variance:u},d={varianceEpsilon:s},h=_a.runKernel(Kt,c,d);return mu(h,o.shape)}}),Su=Pa({batchNorm2d_:function(e,t,n,r,a,s){const o=Ra(e,"x","batchNorm"),i=Ra(t,"mean","batchNorm"),u=Ra(n,"variance","batchNorm");let l,p;return null!=a&&(l=Ra(a,"scale","batchNorm")),null!=r&&(p=Ra(r,"offset","batchNorm")),q(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),q(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),q(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&q(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=p&&q(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),ku(o,i,u,p,l,s)}}),Eu=Pa({batchNorm3d_:function(e,t,n,r,a,s){const o=Ra(e,"x","batchNorm"),i=Ra(t,"mean","batchNorm"),u=Ra(n,"variance","batchNorm");let l,p;return null!=a&&(l=Ra(a,"scale","batchNorm")),null!=r&&(p=Ra(r,"offset","batchNorm")),q(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),q(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),q(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&q(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=p&&q(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),ku(o,i,u,p,l,s)}}),Tu=Pa({batchNorm4d_:function(e,t,n,r,a,s){const o=Ra(e,"x","batchNorm"),i=Ra(t,"mean","batchNorm"),u=Ra(n,"variance","batchNorm");let l,p;return null!=a&&(l=Ra(a,"scale","batchNorm")),null!=r&&(p=Ra(r,"offset","batchNorm")),q(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),q(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),q(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&q(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=p&&q(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),ku(o,i,u,p,l,s)}}),Au=Pa({bincount_:function(e,t,n){const r=Ra(e,"x","bincount"),a=Ra(t,"weights","bincount");q("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),q(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},o={size:n};return _a.runKernel(at,s,o)}}),_u=Pa({broadcastTo_:function(e,t){let n=Ra(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=mu(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Rs(n);const o={x:n},i={reps:s};return _a.runKernel(vr,o,i)}}),Iu=Pa({ceil_:function(e){const t={x:Ra(e,"x","ceil")};return _a.runKernel(it,t)}}),Mu=Pa({clipByValue_:function(e,t,n){const r=Ra(e,"x","clipByValue");q(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return _a.runKernel(ut,a,s)}}),$u=Pa({concat1d_:function(e){return yu(e,0)}}),Du=Pa({concat2d_:function(e,t){return yu(e,t)}}),Ou=Pa({concat3d_:function(e,t){return yu(e,t)}}),Fu=Pa({concat4d_:function(e,t){return yu(e,t)}}),Cu=Pa({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Ra(e,"x","conv2d"),u=Ra(t,"filter","conv2d");let l=i,p=!1;3===i.rank&&(p=!0,l=mu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),q(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),q(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=o&&q(Z(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const c="NHWC"===a?l.shape[3]:l.shape[1];q(c===u.shape[2],(()=>`Error in conv2d: depth of input (${c}) must match input depth for filter ${u.shape[2]}.`)),q(du(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const d={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},m=_a.runKernel(dt,d,h);return p?mu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Ru=Pa({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=Ra(e,"x","conv1d"),u=Ra(t,"filter","conv1d");let l=i,p=!1;2===i.rank&&(p=!0,l=mu(i,[1,i.shape[0],i.shape[1]])),q(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),q(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=o&&q(Z(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),q(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),q(du(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),q("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const c=mu(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=mu(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h=Cu(d,c,[1,n],r,"NHWC",[1,s],o);return mu(h,p?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),Bu=Pa({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=mu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),q(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),q(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),q(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const p="NHWC"===s?i[3]:i[1],c="NHWC"===s?u.shape[3]:u.shape[1];q(p===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`)),q(c===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[3]}.`)),null!=o&&q(Z(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const d={dy:u,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},m=_a.runKernel(mt,d,h);return l?mu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Lu=Pa({conv2dTranspose_:function(e,t,n,r,a,s){const o=Ra(e,"x","conv2dTranspose"),i=Ra(t,"filter","conv2dTranspose");return Bu(n,o,i,r,a,"NHWC",s)}}),Pu=Pa({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=Ra(e,"x","conv3d"),i=Ra(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=mu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),q(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),q(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),q(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),q(du(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),q("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const p={x:u,filter:i},c={strides:n,pad:r,dataFormat:a,dilations:s},d=_a.runKernel(ft,p,c);return l?mu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),zu=Pa({conv3DBackpropInput_:function(e,t,n,r,a){q(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=mu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=o.shape[4];q(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),q(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),q(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),q(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),q(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const p={dy:o,filter:n},c={pad:a,strides:r,inputShape:s},d=_a.runKernel(yt,p,c);return i?mu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Vu=Pa({conv3dTranspose_:function(e,t,n,r,a){const s=Ra(e,"x","conv3dTranspose"),o=Ra(t,"filter","conv3dTranspose");return zu(n,s,o,r,a)}}),Wu=Pa({cos_:function(e){const t={x:Ra(e,"x","cos")};return _a.runKernel(bt,t)}}),Hu=Pa({cosh_:function(e){const t={x:Ra(e,"x","cosh")};return _a.runKernel(wt,t)}}),Ku=Pa({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Ra(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return _a.runKernel(xt,a,s)}}),Uu=Pa({denseBincount_:function(e,t,n,r=!1){const a=Ra(e,"x","denseBincount"),s=Ra(t,"weights","denseBincount");q("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),q(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),q(n>=0,(()=>`size must be non-negative, but got ${n}.`)),q(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const o={x:a,weights:s},i={size:n,binaryOutput:r};return _a.runKernel(Nt,o,i)}}),qu=Pa({depthToSpace_:function(e,t,n="NHWC"){const r=Ra(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];q(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),q(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),q(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return _a.runKernel(kt,i,u)}}),ju=Pa({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Ra(e,"x","depthwiseConv2d"),u=Ra(t,"filter","depthwiseConv2d");let l=i,p=!1;3===i.rank&&(p=!0,l=mu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),q(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),q(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),q(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=o&&q(Z(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`));const c={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},h=_a.runKernel(St,c,d);return p?mu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Gu=Pa({diag_:function(e){const t={x:Ra(e,"x","diag")};return _a.runKernel(At,t)}}),Yu=Pa({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=Ra(e,"x","dilation2d"),i=Ra(t,"filter","dilation2d");q(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),q(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),q("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=o,l=!1;3===o.rank&&(u=mu(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const p={x:u,filter:i},c={strides:n,pad:r,dilations:a},d=_a.runKernel(_t,p,c);return l?mu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ju=Pa({equal_:function(e,t){let n=Ra(e,"a","equal"),r=Ra(t,"b","equal");[n,r]=wa(n,r),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(Ct,a)}}),Xu=Pa({where_:function(e,t,n){const r=Ra(t,"a","where"),a=Ra(n,"b","where"),s=Ra(e,"condition","where","bool"),o=Bi(r.shape,a.shape),i=_u(r,o),u=_u(a,o);1===s.rank&&q(s.shape[0]===r.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==s.rank&&j(s.shape,u.shape,"Error in where: ");const l={condition:s,t:i,e:u};return _a.runKernel(tr,l)}}),Qu=Pa({divNoNan_:function(e,t){let n=Ra(e,"a","div"),r=Ra(t,"b","div");[n,r]=wa(n,r);const a=mi(n,r),s=bi(a),o=Ju(r,s);return Xu(o,s,a)}}),Zu=Pa({dot_:function(e,t){const n=Ra(e,"t1","dot"),r=Ra(t,"t2","dot");q(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(q(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=mu(n,[1,-1]),t=mu(r,[-1,1]),a=to(e,t);return mu(a,[])}if(1===n.rank&&2===r.rank){const e=mu(n,[1,-1]),t=mu(r,[r.shape[0],r.shape[1]]),a=to(e,t);return mu(a,[a.size])}if(2===n.rank&&1===r.rank){const e=mu(r,[-1,1]),t=to(n,e);return mu(t,[t.size])}{const e=mu(r,[r.shape[0],r.shape[1]]);return to(n,e)}}}),el=Pa({elu_:function(e){const t={x:Ra(e,"x","elu")};return _a.runKernel(Dt,t)}}),tl=Pa({erf_:function(e){let t=Ra(e,"x","erf");q("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Cs(t,"float32"));const n={x:t};return _a.runKernel(Ft,n)}}),nl=Pa({exp_:function(e){const t={x:Ra(e,"x","exp")};return _a.runKernel(Rt,t)}}),rl=Pa({expandDims_:function(e,t=0){const n=Ra(e,"x","expandDims","string_or_numeric");q(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return _a.runKernel(Bt,r,a)}}),al=Pa({expm1_:function(e){const t={x:Ra(e,"x","expm1")};return _a.runKernel(Lt,t)}}),sl=Pa({tile_:function(e,t){const n=Ra(e,"x","tile","string_or_numeric");q(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return _a.runKernel(vr,r,a)}}),ol=Pa({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Fs([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const o=mu(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return sl(rl(o,0),[n[0],1,1]);if(2===n.length)return sl(rl(rl(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return sl(rl(rl(rl(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),il=Pa({floor_:function(e){const t={x:Ra(e,"x","floor")};return _a.runKernel(Wt,t)}}),ul=Pa({gather_:function(e,t,n=0,r=0){const a={x:Ra(e,"x","gather"),indices:Ra(t,"indices","gather","int32")},s={axis:n,batchDims:r};return _a.runKernel(Ut,a,s)}}),ll=Pa({greater_:function(e,t){let n=Ra(e,"a","greater"),r=Ra(t,"b","greater");[n,r]=wa(n,r),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(jt,a)}}),pl=Pa({greaterEqual_:function(e,t){let n=Ra(e,"a","greaterEqual"),r=Ra(t,"b","greaterEqual");[n,r]=wa(n,r),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(Gt,a)}}),cl=Pa({imag_:function(e){const t={input:Ra(e,"input","imag")};return _a.runKernel(Xt,t)}}),dl=Pa({isFinite_:function(e){const t={x:Ra(e,"x","isFinite")};return _a.runKernel(Qt,t)}}),hl=Pa({isInf_:function(e){const t={x:Ra(e,"x","isInf")};return _a.runKernel(Zt,t)}}),ml=Pa({isNaN_:function(e){const t={x:Ra(e,"x","isNaN")};return _a.runKernel(en,t)}}),fl=Pa({leakyRelu_:function(e,t=.2){const n={x:Ra(e,"x","leakyRelu")},r={alpha:t};return _a.runKernel(tn,n,r)}}),gl=Pa({less_:function(e,t){let n=Ra(e,"a","less"),r=Ra(t,"b","less");[n,r]=wa(n,r),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(nn,a)}}),yl=Pa({lessEqual_:function(e,t){let n=Ra(e,"a","lessEqual"),r=Ra(t,"b","lessEqual");[n,r]=wa(n,r),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(rn,a)}});function bl(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return _a.runKernel(an,{},r)}const wl=Pa({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Ra(e,"x","localResponseNormalization");q(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),q(Z(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=s,i=!1;3===s.rank&&(i=!0,o=mu(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},p=_a.runKernel(dn,u,l);return i?mu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),xl=Pa({log_:function(e){const t={x:Ra(e,"x","log")};return _a.runKernel(sn,t)}}),vl=Pa({log1p_:function(e){const t={x:Ra(e,"x","log1p")};return _a.runKernel(on,t)}}),Nl=Pa({neg_:function(e){const t={x:Ra(e,"x","neg")};return _a.runKernel(_n,t)}}),kl=Pa({softplus_:function(e){const t={x:Ra(e,"x","softplus")};return _a.runKernel(ur,t)}}),Sl=Pa({logSigmoid_:function(e){const t=Ra(e,"x","logSigmoid");return Si((e=>({value:Nl(kl(Nl(e))),gradFunc:t=>fi(t,bu(Nl(e)))})))(t)}}),El=Pa({max_:function(e,t=null,n=!1){const r={x:Ra(e,"x","max")},a={reductionIndices:t,keepDims:n};return _a.runKernel(mn,r,a)}}),Tl=Pa({sum_:function(e,t=null,n=!1){let r=Ra(e,"x","sum");"bool"===r.dtype&&(r=Cs(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return _a.runKernel(pr,a,s)}}),Al=Pa({logSoftmax_:function(e,t=-1){const n=Ra(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Si(((e,n)=>{const r=El(e,t,!0),a=Di(e,r),s=Di(Cs(a,"float32"),xl(Tl(nl(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=nl(r);return Di(e,fi(Tl(e,t,!0),a))}}}))(n)}});function _l(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Il(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function Ml(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function $l(e,t){return Il(e,t.map((e=>1)),t)}function Dl(e,t,n){q(_l(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ol(e,t){if(_l(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Fl(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Cl(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Rl=Pa({logSumExp_:function(e,t=null,n=!1){const r=Ra(e,"x","logSumExp"),a=oe(t,r.shape),s=El(r,a,!0),o=Di(r,s),i=nl(o),u=Tl(i,a),l=xl(u),p=di(mu(s,l.shape),l);if(n){const e=$l(p.shape,a);return mu(p,e)}return p}}),Bl=Pa({logicalAnd_:function(e,t){const n=Ra(e,"a","logicalAnd","bool"),r=Ra(t,"b","logicalAnd","bool");Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(un,a)}}),Ll=Pa({logicalNot_:function(e){const t={x:Ra(e,"x","logicalNot","bool")};return _a.runKernel(ln,t)}}),Pl=Pa({logicalOr_:function(e,t){const n=Ra(e,"a","logicalOr","bool"),r=Ra(t,"b","logicalOr","bool");Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(pn,a)}}),zl=Pa({logicalXor_:function(e,t){const n=Ra(e,"a","logicalXor","bool"),r=Ra(t,"b","logicalXor","bool");return Bi(n.shape,r.shape),Bl(Pl(e,t),Ll(Bl(e,t)))}}),Vl=Pa({maxPool_:function(e,t,n,r,a){const s=Ra(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=mu(s,[1,s.shape[0],s.shape[1],s.shape[2]])),q(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),q(du(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&q(Z(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},p=_a.runKernel(gn,u,l);return i?mu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Wl=Pa({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const o=Ra(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=mu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),q(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),q("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&q(Z(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:i},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},c=_a.runKernel(bn,l,p);return u?mu(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}}),Hl=Pa({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Ra(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=_a.runKernel(xn,s,o);return{result:i[0],indexes:i[1]}}}),Kl=Pa({mean_:function(e,t=null,n=!1){const r={x:Ra(e,"x","mean")},a={axis:t,keepDims:n};return _a.runKernel(vn,r,a)}}),Ul=Pa({min_:function(e,t=null,n=!1){const r={x:Ra(e,"x","min")},a={axis:t,keepDims:n};return _a.runKernel(Nn,r,a)}}),ql=Pa({minimum_:function(e,t){let n=Ra(e,"a","minimum"),r=Ra(t,"b","minimum");[n,r]=wa(n,r),"bool"===n.dtype&&(n=Cs(n,"int32"),r=Cs(r,"int32")),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(kn,a)}}),jl=Pa({mirrorPad_:function(e,t,n){q("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ra(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");q(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)q(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),q(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},o={x:r};return _a.runKernel(Sn,o,s)}}),Gl=Pa({mod_:function(e,t){let n=Ra(e,"a","mod"),r=Ra(t,"b","mod");[n,r]=wa(n,r);const a={a:n,b:r};return _a.runKernel(En,a)}}),Yl=Pa({moments_:function(e,t=null,n=!1){const r=oe(t,(e=Ra(e,"x","moments")).shape),a=Kl(e,r,n);let s=a.shape;n||(s=$l(a.shape,r));const o=yi(Di(Cs(e,"float32"),mu(a,s)));return{mean:a,variance:Kl(o,r,n)}}}),Jl=Pa({multiRNNCell_:function(e,t,n,r){const a=Ra(t,"data","multiRNNCell"),s=Ba(n,"c","multiRNNCell"),o=Ba(r,"h","multiRNNCell");let i=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],p=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),p.push(u[e+1]);return[l,p]}}),Xl=Pa({multinomial_:function(e,t,n,r=!1){const a=Ra(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?mu(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=_a.runKernel(Tn,i,u);return 1===o?mu(l,[l.size]):l}}),Ql=Pa({notEqual_:function(e,t){let n=Ra(e,"a","notEqual"),r=Ra(t,"b","notEqual");[n,r]=wa(n,r),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(In,a)}});function Zl(e,t="float32"){if("complex64"===t){const t=Zl(e,"float32"),n=Zl(e,"float32");return za(t,n)}const n=Te(J(e),t);return _a.makeTensor(n,e,t)}function ep(e,t="float32"){if("complex64"===t){const t=ep(e,"float32"),n=Zl(e,"float32");return za(t,n)}const n=Ee(J(e),t);return _a.makeTensor(n,e,t)}const tp=Pa({onesLike_:function(e){const t={x:Ra(e,"x","onesLike")};return _a.runKernel(On,t)}}),np=Pa({outerProduct_:function(e,t){const n=Ra(e,"v1","outerProduct"),r=Ra(t,"v2","outerProduct");q(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=mu(n,[-1,1]),s=mu(r,[1,-1]);return to(a,s)}}),rp=Pa({pad_:function(e,t,n=0){const r=Ra(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return _a.runKernel(Rn,s,a)}}),ap=Pa({pad1d_:function(e,t,n=0){return q(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),rp(e,[t],n)}}),sp=Pa({pad2d_:function(e,t,n=0){return q(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rp(e,t,n)}}),op=Pa({pad3d_:function(e,t,n=0){return q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rp(e,t,n)}}),ip=Pa({pad4d_:function(e,t,n=0){return q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),rp(e,t,n)}}),up=Pa({spaceToBatchND_:function(e,t,n){const r=Ra(e,"x","spaceToBatchND");q(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),q(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),q(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return _a.runKernel(cr,a,s)}}),lp=Pa({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=Ra(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=mu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),q(du(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=nu(i.shape,t,s,a,r),p=[l.dilationHeight,l.dilationWidth];let c;c="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],p):[[0,0],[0,0]];const d=1===p[0]&&1===p[1],[h,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([l.inHeight,l.inWidth],p,c),f=d?r:"valid",g=d?i:up(i,p,h),y=("avg"===n?()=>fu(g,t,s,f):()=>Vl(g,t,s,f))(),b=d?y:Nu(y,p,m);return u?mu(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),pp=Pa({prelu_:function(e,t){const n={x:Ra(e,"x","prelu"),alpha:Ra(t,"alpha","prelu")};return _a.runKernel(Pn,n)}}),cp=Pa({prod_:function(e,t=null,n=!1){let r=Ra(e,"x","prod");"bool"===r.dtype&&(r=Cs(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return _a.runKernel(zn,a,s)}}),dp=Pa({rand_:function(e,t,n){const r=J(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return _a.makeTensor(a,e,n)}});var hp=n(377);class mp{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=hp.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class fp{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=hp.alea(a.toString()),this.randn=new mp(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class gp{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hp.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const yp=Pa({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new fp(t,n,r,a),o=Fs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),bp=Pa({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new mp(t,n,r,!1,a),o=Fs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),wp=Pa({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=Fs(e,r),o=new gp(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});function xp(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return _a.runKernel(Vn,{},a)}const vp=Pa({real_:function(e){const t={input:Ra(e,"input","real")};return _a.runKernel(Wn,t)}}),Np=Pa({reciprocal_:function(e){const t={x:Ra(e,"x","reciprocal")};return _a.runKernel(Hn,t)}}),kp=Pa({relu_:function(e){const t={x:Ra(e,"x","relu")};return _a.runKernel(Kn,t)}}),Sp=Pa({relu6_:function(e){const t={x:Ra(e,"x","relu6")};return _a.runKernel(Jn,t)}}),Ep=Pa({reverse_:function(e,t){const n={x:Ra(e,"x","reverse")},r={dims:t};return _a.runKernel(Xn,n,r)}}),Tp=Pa({reverse1d_:function(e){const t=Ra(e,"x","reverse");return q(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Ep(t,0)}}),Ap=Pa({reverse2d_:function(e,t){const n=Ra(e,"x","reverse");return q(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Ep(n,t)}}),_p=Pa({reverse3d_:function(e,t){const n=Ra(e,"x","reverse");return q(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Ep(n,t)}}),Ip=Pa({reverse4d_:function(e,t){const n=Ra(e,"x","reverse");return q(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Ep(n,t)}}),Mp=Pa({round_:function(e){const t={x:Ra(e,"x","round")};return _a.runKernel(Qn,t)}}),$p=Pa({rsqrt_:function(e){const t={x:Ra(e,"x","rsqrt")};return _a.runKernel(Zn,t)}}),Dp=Pa({selu_:function(e){const t={x:Ra(e,"x","selu")};return _a.runKernel(nr,t)}}),Op=Pa({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=Ra(e,"x","separableConv2d"),u=Ra(t,"depthwiseFilter","separableConv2d"),l=Ra(n,"pointwiseFilter","separableConv2d");let p=i,c=!1;if(3===i.rank&&(c=!0,p=mu(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");q(4===p.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`)),q(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),q(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),q(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),q(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],h=u.shape[3];q(l.shape[2]===d*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${l.shape[2]}.`));const m=ju(p,u,r,a,o,s),f=Cu(m,l,1,"valid",o);return c?mu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fp=async function(e,t){const n=Ra(e,"x","setdiff1d"),r=Ra(t,"y","setdiff1d");q(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),q(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),q(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new sa([i],n.dtype),l=new sa([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Cp=Pa({sign_:function(e){const t={x:Ra(e,"x","sign")};return _a.runKernel(or,t)}}),Rp=Pa({sin_:function(e){const t={x:Ra(e,"x","sin")};return _a.runKernel(ar,t)}}),Bp=Pa({sinh_:function(e){const t={x:Ra(e,"x","sinh")};return _a.runKernel(sr,t)}}),Lp=Pa({slice1d_:function(e,t,n){const r=Ra(e,"x","slice1d");return q(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),wu(r,[t],[n])}}),Pp=Pa({slice2d_:function(e,t,n){const r=Ra(e,"x","slice2d");return q(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),wu(r,t,n)}}),zp=Pa({slice3d_:function(e,t,n){const r=Ra(e,"x","slice3d");return q(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),wu(r,t,n)}}),Vp=Pa({slice4d_:function(e,t,n){const r=Ra(e,"x","slice4d");return q(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),wu(r,t,n)}}),Wp=Pa({softmax_:function(e,t=-1){const n=Ra(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return _a.runKernel(hr,r,a)}}),Hp=Pa({fft_:function(e){q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return _a.runKernel(Pt,t)}}),Kp=Pa({ifft_:function(e){q("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return _a.runKernel(Jt,t)}}),Up=Pa({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=mu(e,[n,t]);r=Kp(a)}else{const a=[n,2*(t-1)],s=mu(vp(e),[n,t]),o=mu(cl(e),[n,t]),i=Ep(wu(s,[0,1],[n,t-2]),1),u=fi(Ep(wu(o,[0,1],[n,t-2]),1),Ti(-1)),l=yu([s,i],1),p=yu([o,u],1),c=mu(za(l,p),[a[0],a[1]]);r=Kp(c)}if(r=vp(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=mu(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),qp=Pa({split_:function(e,t,n=0){const r={x:Ra(e,"x","split")},a={numOrSizeSplits:t,axis:n};return _a.runKernel(dr,r,a)}}),jp=Pa({rfft_:function(e,t){q("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=wu(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=yu([e,Zl(r)],e.shape.length-1),n=t}else a=e;const s=bi(a),o=mu(za(a,s),[r,n]),i=Hp(o),u=Math.floor(n/2)+1,l=vp(i),p=cl(i),c=qp(l,[u,n-u],l.shape.length-1),d=qp(p,[u,n-u],p.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,mu(za(c[0],d[0]),h)}}),Gp=Pa({squaredDifference_:function(e,t){let n=Ra(e,"a","squaredDifference"),r=Ra(t,"b","squaredDifference");[n,r]=wa(n,r),Bi(n.shape,r.shape);const a={a:n,b:r};return _a.runKernel(mr,a,{})}}),Yp=Pa({squeeze_:function(e,t){const n=Ra(e,"x","squeeze");return mu(n,ie(n.shape,t).newShape)}}),Jp=Pa({stack_:function(e,t=0){const n=Ba(e,"tensors","stack","string_or_numeric");q(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&q(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return _a.runKernel(Cn,r,a)}}),Xp=Pa({step_:function(e,t=0){const n={x:Ra(e,"x","step")},r={alpha:t};return _a.runKernel(_r,n,r)}}),Qp=Pa({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){const l={x:Ra(e,"x","stridedSlice")},p={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return _a.runKernel(br,l,p)}}),Zp=Pa({tan_:function(e){const t={x:Ra(e,"x","tan")};return _a.runKernel(wr,t)}});function ec(e,t){G(e);const n=Oa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Va(e,null,n,t)}function tc(e,t,n){if(G(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Oa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Va(e,t,r,n)}function nc(e,t,n){if(G(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Oa(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Va(e,t,r,n)}function rc(e,t,n){if(G(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Oa(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Va(e,t,r,n)}function ac(e,t,n){if(G(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Oa(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Va(e,t=t||r,r,n)}const sc=Pa({topk_:function(e,t=1,n=!0){const r=Ra(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},o={k:t,sorted:n},[i,u]=_a.runKernel(Nr,s,o);return{values:i,indices:u}}}),oc=Pa({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new mp(t,n,r,!0,a),o=Fs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),ic=Pa({unique_:function(e,t=0){const n=Ra(e,"x","unique","string_or_numeric");q(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,o]=_a.runKernel(Sr,r,a);return{values:s,indices:o}}}),uc=Pa({unsortedSegmentSum_:function(e,t,n){const r=Ra(e,"x","unsortedSegmentSum"),a=Ra(t,"segmentIds","unsortedSegmentSum","int32");q(Z(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},o={numSegments:n};return _a.runKernel(Tr,s,o)}}),lc=Pa({unstack_:function(e,t=0){const n=Ra(e,"x","unstack","string_or_numeric");q(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return _a.runKernel(Er,r,a)}});function pc(e,t=!0,n,r){return _a.makeVariable(e,t,n,r)}function cc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Fs(e,"int32"),a=Fs([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),o=t*e.length;a.values.set(s,o)}return a.toTensor()}const dc=async function(e){const t=Ra(e,"condition","whereAsync","bool"),n=await t.data(),r=cc(t.shape,n);return e!==t&&t.dispose(),r},hc=async function(e,t,n){const r=Ra(e,"tensor","boolMask"),a=Ra(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;q(o>0,(()=>"mask cannot be scalar")),j(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+o;e++)u*=i[e];const l=i.slice(0,s).concat([u],i.slice(s+o)),p=mu(r,l),c=mu(a,[-1]),d=await dc(c),h=Yp(d,[1]),m=ul(p,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),p.dispose(),c.dispose(),d.dispose(),m};function mc(e,t,n=null){if(0===e.rank)return Fi(e);if(1!==e.rank&&null===n)return mc(mu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Tl(Fi(e),n);if(t===1/0)return El(Fi(e),n);if(t===-1/0)return Ul(Fi(e),n);if("euclidean"===t||2===t)return gi(Tl($i(Fi(e),Ti(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return El(Tl(Fi(e),n[0]),n[1]-1);if(t===1/0)return El(Tl(Fi(e),n[1]),n[0]);if(t===-1/0)return Ul(Tl(Fi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return gi(Tl(yi(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const fc=Pa({norm_:function(e,t="euclidean",n=null,r=!1){const a=mc(e=Ra(e,"x","norm"),t,n);let s=a.shape;if(r){const t=oe(n,e.shape);s=$l(a.shape,t)}return mu(a,s)}}),gc=Pa({movingAverage_:function(e,t,n,r,a=!0){const s=Ra(e,"v","movingAverage"),o=Ra(t,"x","movingAverage"),i=Ra(n,"decay","movingAverage");xa(s,o),q(Q(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=Ti(1),l=Di(u,i);let p=fi(Di(o,s),l);if(a){q(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ra(r,"step","movingAverage");p=mi(p,Di(u,$i(i,e)))}return di(s,p)}}),yc=Pa({scatterND_:function(e,t,n){const r=Ra(e,"indices","scatterND","int32"),a=Ra(t,"updates","scatterND");co(a,r,n);const s={indices:r,updates:a},o={shape:n};return _a.runKernel(er,s,o)}}),bc=Pa({sparseToDense_:function(e,t,n,r=0){const a=Ra(e,"sparseIndices","sparseToDense","int32"),s=Ra(t,"sparseValues","sparseToDense"),o=Ra(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return _a.runKernel(yr,i,u)}}),wc=Pa({gatherND_:function(e,t){const n=Ra(t,"indices","gatherND","int32"),r={params:Ra(e,"x","gatherND"),indices:n};return _a.runKernel(qt,r)}}),xc=Pa({dropout_:function(e,t,n,r){const a=Ra(e,"x","dropout");if(q("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),q(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof la?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(Q(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,i=mi(il(di(wp(s,0,1,"float32",r),o)),o);return fi(a,i)}});function vc(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Nc(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return ec(a,"float32")}const kc=async function(e,t,n=1){const r=Ra(e,"predictions","inTopK"),a=Ra(t,"targets","inTopK");q(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),q(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),j(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];q(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),i=await a.data(),[u,l]=[o.length/s,s],p=ue("bool",u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(a[t].index===i[e]){p[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Wa(p,a.shape,"bool")},Sc=Pa({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=mu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=mu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),q(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),q(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),q(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?i.shape[3]:i.shape[1],p="NHWC"===s?u.shape[3]:u.shape[1];q(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),q(p===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`)),null!=o&&q(Z(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`));const c={x:i,dy:u},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,filterShape:n};return _a.runKernel(ht,c,d)}});function Ec(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return fi(e,Xp(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Tc(e,t){let n=t;const r=Ri(e.shape,t.shape);return r.length>0&&(n=Tl(n,r)),mu(n,e.shape)}function Ac(e,t,n,r){if("linear"===t)return e;if("relu"===t)return kp(e);if("elu"===t)return el(e);if("relu6"===t)return Sp(e);if("prelu"===t)return pp(e,n);if("leakyrelu"===t)return fl(e,r);throw new Error(`Unknown fused activation ${t}.`)}const _c=(e,t)=>!(e>0)||"linear"===t,Ic=Pa({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(u=u||"linear",!1===_c(_a.state.gradientDepth,u)){let c=Cu(e,t,n,r,a,s,o);return null!=i&&(c=di(c,i)),Ac(c,u,l,p)}const c=Ra(e,"x","conv2d"),d=Ra(t,"filter","conv2d");let h=c,m=!1;3===c.rank&&(m=!0,h=mu(c,[1,c.shape[0],c.shape[1],c.shape[2]])),q(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),q(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=o&&q(Z(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),q(h.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),q(du(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),q("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const f=au(h.shape,d.shape,n,s,r,o);let g,y;null!=i&&(g=Ra(i,"bias","fused conv2d"),[g]=wa(g,c),Bi(f.outShape,g.shape)),null!=l&&(y=Ra(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,o,i,l]=t,p=Ec(e,i,u);q(cu(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const c=[Bu(o.shape,p,a,n,r),Sc(o,p,a.shape,n,r)];if(null!=l){const e=Tc(l,p);c.push(e)}return c},w={x:h,filter:d,bias:g,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:p};return null==i?Si(((e,t,n)=>{let r=_a.runKernel(Dr,w,x);return n([t,e,r]),m&&(r=mu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(h,d):Si(((e,t,n,r)=>{let a=_a.runKernel(Dr,w,x);return r([t,e,a,n]),m&&(a=mu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(h,d,g)}}),Mc=Pa({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],o){let i=e;3===e.rank&&(i=mu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=mu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},p={strides:r,pad:a,dimRoundingMode:o,dilations:s,filterShape:n};return _a.runKernel(Et,l,p)}}),$c=Pa({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=mu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},p={strides:r,pad:a,dimRoundingMode:o,dilations:s,inputShape:e},c=_a.runKernel(Tt,l,p);return u?mu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Dc=Pa({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:p}){if(!1===_c(_a.state.gradientDepth,u)){let c=ju(e,t,n,r,a,s,o);return null!=i&&(c=di(c,i)),Ac(c,u,l,p)}const c=Ra(e,"x","depthwiseConv2d"),d=Ra(t,"filter","depthwiseConv2d");let h=c,m=!1;3===c.rank&&(m=!0,h=mu(c,[1,c.shape[0],c.shape[1],c.shape[2]])),q(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),q(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),q(h.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),q(du(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=o&&q(Z(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`));const f=au(h.shape,d.shape,n,s,r,o,!0);let g,y;null!=i&&(g=Ra(i,"bias","fused conv2d"),[g]=wa(g,c),Bi(f.outShape,g.shape)),null!=l&&(y=Ra(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{q(cu(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,i,l,p]=t,c=Ec(e,l,u),d=$c(i.shape,c,a,n,r,s,o),h=Mc(i,c,a.shape,n,r,s,o);return null!=p?[d,h,Tc(g,c)]:[d,h]},w={x:h,filter:d,bias:g,preluActivationWeights:y},x={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:p};return null==i?Si(((e,t,n)=>{let r=_a.runKernel(Or,w,x);return n([t,e,r]),m&&(r=mu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(h,d):Si(((e,t,n,r)=>{let a=_a.runKernel(Or,w,x);return r([t,e,a,n]),m&&(a=mu(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(h,d,g)}}),Oc=Pa({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(!1===_c(_a.state.gradientDepth,s)){let u=to(e,t,n,r);return null!=a&&(u=di(u,a)),Ac(u,s,o,i)}let u=Ra(e,"a","fused matMul"),l=Ra(t,"b","fused matMul");[u,l]=wa(u,l);const p=n?u.shape[u.rank-2]:u.shape[u.rank-1],c=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),f=l.shape.slice(0,-2),g=J(m),y=J(f);q(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),q(Q(m,f),(()=>`Error in fused matMul: outer dimensions (${m}) and (${f}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),q(p===c,(()=>`Error in fused matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=u.shape.slice(0,-2).concat([d,h]),w=mu(u,n?[g,p,d]:[g,d,p]),x=mu(l,r?[y,h,c]:[y,c,h]);let v,N;null!=a&&(v=Ra(a,"bias","fused matMul"),[v]=wa(v,u),Bi(b,v.shape)),null!=o&&(N=Ra(o,"prelu weights","fused matMul"));const k=(e,t)=>{const[o,i,u,l]=t,p=Ec(mu(e,u.shape),u,s);let c,d;return n||r?!n&&r?(c=to(p,i,!1,!1),d=to(p,o,!0,!1)):n&&!r?(c=to(i,p,!1,!0),d=to(o,p,!1,!1)):(c=to(i,p,!0,!0),d=to(p,o,!0,!0)):(c=to(p,i,!1,!0),d=to(o,p,!0,!1)),null!=a?[c,d,Tc(l,p)]:[c,d]},S={a:w,b:x,bias:v,preluActivationWeights:N},E={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:i};return null==a?Si(((e,t,n)=>{const r=_a.runKernel($r,S,E);return n([e,t,r]),{value:mu(r,b),gradFunc:k}}))(w,x):Si(((e,t,n,r)=>{const a=_a.runKernel($r,S,E);return r([e,t,a,n]),{value:mu(a,b),gradFunc:k}}))(w,x,v)}}),Fc=Pa({hammingWindow_:function(e){return Nc(e,.54,.46)}}),Cc=Pa({hannWindow_:function(e){return Nc(e,.5,.5)}}),Rc=Pa({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(wu(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=yu([wu(e,s,t-r),Ii([r],a)]);o.push(i),s+=n}return 0===o.length?tc([],[0,t]):mu(yu(o),[o.length,t])}}),Bc=Pa({stft_:function(e,t,n,r,a=Cc){null==r&&(r=vc(t));const s=Rc(e,t,n),o=fi(s,a(t)),i=[];for(let e=0;e<s.shape[0];e++)i.push(jp(wu(o,[e,0],[1,t]),r));return yu(i)}}),Lc=Pa({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const o=Ra(e,"image","cropAndResize"),i=Ra(t,"boxes","cropAndResize","float32"),u=Ra(n,"boxInd","cropAndResize","int32"),l=i.shape[0];q(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),q(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),q(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),q(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),q(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),q("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const p={image:o,boxes:i,boxInd:u},c={method:a,extrapolationValue:s,cropSize:r};return _a.runKernel(vt,p,c)}}),Pc=Pa({flipLeftRight_:function(e){const t=Ra(e,"image","flipLeftRight","float32");q(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return _a.runKernel(Vt,n,{})}}),zc=Pa({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Ra(e,"image","rotateWithOffset","float32");q(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return _a.runKernel(Mr,s,o)}});function Vc(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),q(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),q(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),q(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),q(1===t.rank,(()=>"scores must be a 1D tensor")),q(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),q(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Wc=Pa({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ra(e,"boxes","nonMaxSuppression"),o=Ra(t,"scores","nonMaxSuppression"),i=Vc(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return _a.runKernel(Mn,{boxes:s,scores:o},u)}});function Hc(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||Kc)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Kc(e,t){return e>t?1:e<t?-1:0}function Uc(e,t,n,r,a){return Gc(e,t,n,r,a,0)}function qc(e,t,n,r,a,s){return Gc(e,t,n,r,a,0,!1,s,!0)}function jc(e,t,n,r,a,s){return Gc(e,t,n,r,a,s,!0)}function Gc(e,t,n,r,a,s,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Xc);const p=s>0?-.5/s:0,c=[],d=[];for(;c.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=c.length-1;n>=o;--n){const o=Yc(e,s,c[n]);if(o>=r){i=!0;break}if(t.score=t.score*Jc(r,p,o),t.score<=a)break}t.suppressBeginIndex=c.length,i||(t.score===n?(c.push(s),d.push(t.score)):t.score>a&&Hc(l,t,Xc))}const h=c.length,m=n-h;i&&m>0&&(c.push(...new Array(m).fill(0)),d.push(...new Array(m).fill(0)));const f={selectedIndices:c};return o&&(f.selectedScores=d),u&&(f.validOutputs=h),f}function Yc(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),p=Math.min(a[1],a[3]),c=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),h=(i-s)*(u-o),m=(c-l)*(d-p);if(h<=0||m<=0)return 0;const f=Math.max(s,l),g=Math.max(o,p),y=Math.min(i,c),b=Math.min(u,d),w=Math.max(y-f,0)*Math.max(b-g,0);return w/(h+m-w)}function Jc(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Xc(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Qc=Pa({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Ra(e,"boxes","nonMaxSuppression"),i=Ra(t,"scores","nonMaxSuppression"),u=Vc(o,i,n,r,a,s),l={boxes:o,scores:i},p={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},c=_a.runKernel(Dn,l,p);return{selectedIndices:c[0],selectedScores:c[1]}}}),Zc=Pa({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Ra(e,"boxes","nonMaxSuppression"),i=Ra(t,"scores","nonMaxSuppression"),u=Vc(o,i,n,r,a,null),l={boxes:o,scores:i},p={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},c=_a.runKernel($n,l,p);return{selectedIndices:c[0],validOutputs:c[1]}}}),ed=Pa({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Ra(e,"images","resizeBilinear");q(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),q(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),q(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=mu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=_a.runKernel(Gn,i,u);return o?mu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),td=Pa({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Ra(e,"images","resizeNearestNeighbor");q(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),q(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),q("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),q(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=mu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=_a.runKernel(qn,i,u);return o?mu(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),nd=Pa({bandPart_:function(e,t,n){q(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),q(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Ra(e,"a","bandPart");q(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=mu(xp(0,s,1,"int32"),[-1,1]),u=xp(0,o,1,"int32"),l=Di(i,u),p=Bl(yl(l,Ti(+t,"int32")),pl(l,Ti(-n,"int32"))),c=Zl([s,o],r.dtype);return mu(Jp(lc(mu(r,[-1,s,o])).map((e=>Xu(p,e,c)))),a)}}),rd=Pa({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,q(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)q(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=qp(e,e.shape[0],0).map((e=>Yp(e,[0])));q(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(_a.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=fi(Tl(fi(n[r],e)),n[r]);e=Di(e,t)}return mi(e,fc(e,"euclidean"))})));return t?Jp(n,0):n}});function ad(e,t=!1){return _a.tidy((()=>{q(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=ol(n),s=Rs(e);const o=tc([[1]],[1,1]);let i=Rs(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,l=a;[i,s,a]=_a.tidy((()=>{const t=wu(s,[e,e],[n-e,1]),u=fc(t),l=wu(s,[e,e],[1,1]),p=Xu(ll(l,0),tc([[-1]]),tc([[1]])),c=Di(l,fi(p,u)),d=mi(t,c);i=1===d.shape[0]?Rs(o):yu([o,wu(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const h=Nl(mi(to(p,c),u)),m=wu(s,[e,0],[n-e,r]),f=fi(h,i),g=ro(i);if(0===e)s=Di(m,to(f,to(g,m)));else{const t=Di(m,to(f,to(g,m)));s=yu([wu(s,[0,0],[e,r]),t],0)}const y=ro(f),b=wu(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Di(b,to(to(b,i),y));else{const t=Di(b,to(to(b,i),y));a=yu([wu(a,[0,0],[n,e]),t],1)}return[i,s,a]})),ei([t,u,l])}return!t&&n>r&&(a=wu(a,[0,0],[n,r]),s=wu(s,[0,0],[r,r])),[a,s]}))}const sd=Pa({qr_:function(e,t=!1){if(q(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ad(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=lc(mu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=ad(e,t);a.push(n),s.push(r)})),[mu(Jp(a,0),e.shape),mu(Jp(s,0),e.shape)]}}});var od;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(od||(od={}));const id=Pa({computeWeightedLoss_:function(e,t,n=od.SUM_BY_NONZERO_WEIGHTS){const r=Ra(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Ra(t,"weights","computeWeightedLoss"));const s=null==a?r:fi(r,a);if(n===od.NONE)return s;if(n===od.SUM)return Tl(s);if(n===od.MEAN){if(null==a)return Kl(s);{const e=r.size/a.size,t=mi(Tl(s),Tl(a));return e>1?mi(t,Ti(e)):t}}if(n===od.SUM_BY_NONZERO_WEIGHTS){if(null==a)return mi(Tl(s),Ti(r.size));{const e=fi(a,ep(r.shape)),t=Cs(Tl(Ql(e,Ti(0))),"float32");return mi(Tl(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),ud=Pa({absoluteDifference_:function(e,t,n,r=od.SUM_BY_NONZERO_WEIGHTS){const a=Ra(e,"labels","absoluteDifference"),s=Ra(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Ra(n,"weights","absoluteDifference")),j(a.shape,s.shape,"Error in absoluteDifference: ");const i=Fi(Di(a,s));return id(i,o,r)}}),ld=Pa({cosineDistance_:function(e,t,n,r,a=od.SUM_BY_NONZERO_WEIGHTS){const s=Ra(e,"labels","cosineDistance"),o=Ra(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Ra(r,"weights","cosineDistance")),j(s.shape,o.shape,"Error in cosineDistance: ");const u=Ti(1),l=Di(u,Tl(fi(s,o),n,!0));return id(l,i,a)}}),pd=Pa({hingeLoss_:function(e,t,n,r=od.SUM_BY_NONZERO_WEIGHTS){let a=Ra(e,"labels","hingeLoss");const s=Ra(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Ra(n,"weights","hingeLoss")),j(a.shape,s.shape,"Error in hingeLoss: ");const i=Ti(1);a=Di(fi(Ti(2),a),i);const u=kp(Di(i,fi(a,s)));return id(u,o,r)}}),cd=Pa({huberLoss_:function(e,t,n,r=1,a=od.SUM_BY_NONZERO_WEIGHTS){const s=Ra(e,"labels","huberLoss"),o=Ra(t,"predictions","huberLoss");let i=null;null!=n&&(i=Ra(n,"weights","huberLoss")),j(s.shape,o.shape,"Error in huberLoss: ");const u=Ti(r),l=Fi(Di(o,s)),p=ql(l,u),c=Di(l,p),d=di(fi(Ti(.5),yi(p)),fi(u,c));return id(d,i,a)}}),dd=Pa({logLoss_:function(e,t,n,r=1e-7,a=od.SUM_BY_NONZERO_WEIGHTS){const s=Ra(e,"labels","logLoss"),o=Ra(t,"predictions","logLoss");let i=null;null!=n&&(i=Ra(n,"weights","logLoss")),j(s.shape,o.shape,"Error in logLoss: ");const u=Ti(1),l=Ti(r),p=Nl(fi(s,xl(di(o,l)))),c=fi(Di(u,s),xl(di(Di(u,o),l))),d=Di(p,c);return id(d,i,a)}}),hd=Pa({meanSquaredError_:function(e,t,n,r=od.SUM_BY_NONZERO_WEIGHTS){const a=Ra(e,"labels","meanSquaredError"),s=Ra(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Ra(n,"weights","meanSquaredError")),j(a.shape,s.shape,"Error in meanSquaredError: ");const i=Gp(a,s);return id(i,o,r)}}),md=Pa({sigmoidCrossEntropy_:function(e,t,n,r=0,a=od.SUM_BY_NONZERO_WEIGHTS){let s=Ra(e,"multiClassLabels","sigmoidCrossEntropy");const o=Ra(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Ra(n,"weights","sigmoidCrossEntropy")),j(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ti(r),t=Ti(1),n=Ti(.5);s=di(fi(s,Di(t,e)),fi(n,e))}const u=function(e,t){const n=Ra(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ra(t,"logits","sigmoidCrossEntropyWithLogits");j(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=kp(r),s=fi(r,n),o=vl(nl(Nl(Fi(r))));return di(Di(a,s),o)}(s,o);return id(u,i,a)}}),fd=Pa({softmaxCrossEntropy_:function(e,t,n,r=0,a=od.SUM_BY_NONZERO_WEIGHTS){let s=Ra(e,"onehotLabels","softmaxCrossEntropy");const o=Ra(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Ra(n,"weights","softmaxCrossEntropy")),j(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ti(r),t=Ti(1),n=Ti(s.shape[1]);s=di(fi(s,Di(t,e)),mi(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Si(((e,t,r)=>{const a=Rl(t,[n],!0),s=Di(Cs(t,"float32"),a);r([e,s]);const o=Nl(fi(s,e));return{value:Tl(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=$l(e.shape,[n]);return[fi(mu(e,s),Di(Cs(r,"float32"),nl(a))),fi(mu(e,s),Di(nl(a),Cs(r,"float32")))]}}}))(e,t)}(s,o);return id(u,i,a)}}),gd={fft:Hp,ifft:Kp,rfft:jp,irfft:Up},yd={hammingWindow:Fc,hannWindow:Cc,frame:Rc,stft:Bc},bd={flipLeftRight:Pc,resizeNearestNeighbor:td,resizeBilinear:ed,rotateWithOffset:zc,cropAndResize:Lc,nonMaxSuppression:Wc,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ra(e,"boxes","nonMaxSuppressionAsync"),o=Ra(t,"scores","nonMaxSuppressionAsync"),i=Vc(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=u[0],p=u[1],{selectedIndices:c}=Uc(l,p,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),ec(c,"int32")},nonMaxSuppressionWithScore:Qc,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Ra(e,"boxes","nonMaxSuppressionAsync"),i=Ra(t,"scores","nonMaxSuppressionAsync"),u=Vc(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),p=l[0],c=l[1],{selectedIndices:d,selectedScores:h}=jc(p,c,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:ec(d,"int32"),selectedScores:ec(h)}},nonMaxSuppressionPadded:Zc,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Ra(e,"boxes","nonMaxSuppressionAsync"),i=Ra(t,"scores","nonMaxSuppressionAsync"),u=Vc(o,i,n,r,a,null),l=u.maxOutputSize,p=u.iouThreshold,c=u.scoreThreshold,[d,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:f}=qc(d,h,l,p,c,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:ec(m,"int32"),validOutputs:Ti(f,"int32")}}},wd={bandPart:nd,gramSchmidt:rd,qr:sd},xd={absoluteDifference:ud,computeWeightedLoss:id,cosineDistance:ld,hingeLoss:pd,huberLoss:cd,logLoss:dd,meanSquaredError:hd,sigmoidCrossEntropy:md,softmaxCrossEntropy:fd};class vd{static sgd(e){return new zi(e)}static momentum(e,t,n=!1){return new Vi(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Wi(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Oi(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new _i(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Pi(e,t,n,r,a)}static adagrad(e,t=.1){return new Mi(e,t)}}const Nd={sgd:vd.sgd,momentum:vd.momentum,adadelta:vd.adadelta,adagrad:vd.adagrad,rmsprop:vd.rmsprop,adamax:vd.adamax,adam:vd.adam},kd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Sd(){return new Promise((e=>kd((()=>e()))))}function Ed(e,t){const n=e[0].length;e.forEach(((e,t)=>{q(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),q(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)q(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Td(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Ad=30;function _d(e){return e<=Ad?e:ve(e,Math.floor(Math.sqrt(e)))}function Id(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Md(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function $d(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Dd(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Od(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Fd(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const Cd=1.7580993408473768,Rd=1.0507009873554805,Bd=.3275911,Ld=.254829592,Pd=-.284496736,zd=1.421413741,Vd=-1.453152027,Wd=1.061405429;function Hd(...e){Oe().getBool("IS_TEST")||console.warn(...e)}function Kd(...e){Oe().getBool("IS_TEST")||console.log(...e)}function Ud(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function qd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function jd(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Gd(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Yd(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Jd(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Xd(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Qd(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Zd(e,t,n=0){let r=[];if("number"==typeof t)q(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{q(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}q(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function eh(e,t){let n,r=!1;for(e<=Ad?(n=e,r=!0):n=ve(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ve(e,n+1);return n}function th(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function nh(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,p=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)i.push(t.shape[e]);for(let t=n+1;t<s;t++)i.push(e.shape[t]),p*=e.shape[t];return{batchSize:u,sliceSize:p,outerSize:l,dimSize:o,outputShape:i}}function rh(e){try{return e.map((e=>Jr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ah(e){return e.map((e=>Yr(e)))}var sh,oh;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(sh||(sh={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(oh||(oh={}));const ih={};function uh(e){return ih[e]}function lh(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return ph(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,o).map((e=>ph(e,n,r,a)));const i=ph(t.inputNames.slice(e)[0],n,r,a),u=i.dataSync();return"number"===s.type?u[0]:Se(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function ph(e,t,n,r){const[a,s]=hh(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[dh(a,e)]));return void 0!==o?t[dh(a,o)][s]:void 0}function ch(e,t){const[n,r]=hh(e);return[dh(n,t&&t.currentContextId),r]}function dh(e,t){return t?`${e}-${t}`:e}function hh(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function mh(e,t,n){let r=lh("pad",e,t,n);if("explicit"===r){r=lh("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function fh(e){return e.kept?e:Rs(e)}const gh=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yh=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],bh=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],wh=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],xh=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],vh=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Nh=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],kh=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Sh=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],Eh=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],Th=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ah=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_h=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Ih=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Mh=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],$h=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Dh=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Oh{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[w,x,v,N,k,S,E,I,_,T,M,$,D,O,F,C,A].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let l={},p={};null!=t&&(l=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));const c=Object.keys(o);c.forEach((e=>{const t=o[e];t.inputNames.forEach((e=>{const[n]=ch(e);t.inputs.push(o[n]),o[n].children.push(t)}))})),0===Object.keys(p).length?c.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(p).forEach((e=>{const[t]=ch(e),n=o[t];null!=n&&(n.signatureKey=p[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=ch(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=uh(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Ch(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ch(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Uh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Uh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Bh(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Bh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Kh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Kh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Rh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Rh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=jh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=jh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Hh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Hh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=qh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=qh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=zh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=zh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Vh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Vh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Ph(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ph(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=ch(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Lh(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=ch(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=ch(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Fh(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Oe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Ch(e,t,n,r=!1){const a=e[t];return null!=a?Fh(a.s,r):n}function Rh(e,t,n){const r=e[t];return r?r.b:n}function Bh(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Lh(e){switch("string"==typeof e&&(e=sh[e]),e){case sh.DT_FLOAT:return"float32";case sh.DT_INT32:case sh.DT_INT64:case sh.DT_INT8:case sh.DT_UINT8:return"int32";case sh.DT_BOOL:return"bool";case sh.DT_DOUBLE:return"float32";case sh.DT_STRING:return"string";default:return null}}function Ph(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function zh(e,t,n){const r=e[t];return r&&r.type?Lh(r.type):n}function Vh(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Lh(e))):n}function Wh(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Hh(e,t,n){const r=e[t];return r&&r.shape?Wh(r.shape):n}function Kh(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Uh(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>Fh(e,r))):n}function qh(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Wh(e))):n}function jh(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Gh{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return ph(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return ph(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Bh(this.node.rawAttrs,e,t);if(null!=n.s)return Ch(this.node.rawAttrs,e,t);if(null!=n.b)return Rh(this.node.rawAttrs,e,t);if(null!=n.shape)return Hh(this.node.rawAttrs,e,t);if(null!=n.type)return zh(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Kh(this.node.rawAttrs,e,t);if(null!=n.list.s)return Uh(this.node.rawAttrs,e,t);if(null!=n.list.shape)return qh(this.node.rawAttrs,e,t);if(null!=n.list.b)return jh(this.node.rawAttrs,e,t);if(null!=n.list.type)return Vh(this.node.rawAttrs,e,t)}return t}}function Yh(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){q(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];q(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Jh(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Xh(e,t,n){let r=Qh(e,n);const a=!Jh(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Qh(e.shape,r)})),!Jh(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Qh(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Zh{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ti(0),ti(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Yh(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ti(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Wa([],[0].concat(this.elementShape));const n=this.readMany(e);return Yh(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Jp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Wa([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Yh(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),yu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,lc(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Zo((()=>{t=mu(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=mu(wu(t,o,i),this.elementShape)}return s}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class em{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Yh(t,e.shape,"TensorList shape mismatch: "),ti(e)})),this.idTensor=Ti(0),this.maxNumElements=r,ti(this.idTensor)}get id(){return this.idTensor.id}copy(){return new em([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Yh(e,this.elementShape,"TensorList shape mismatch: ");const r=Xh(this.elementShape,this.tensors,e);return Zo((()=>{const e=this.tensors.map((e=>mu(e,r)));return Jp(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Xh(this.elementShape,this.tensors,e),r=this.tensors.pop();return Yh(r.shape,e,"TensorList shape mismatch: "),mu(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Yh(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ti(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Yh(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Xh(this.elementShape,this.tensors,t);return mu(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Yh(this.elementShape,t.shape,"TensorList shape mismatch: "),ti(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Yh(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Xh(this.elementShape,this.tensors,n);return 0===e.length?Wa([],[0].concat(r)):Zo((()=>{const t=e.map((e=>mu(this.tensors[e],r)));return Jp(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Yh(this.elementShape,t,"TensorList shape mismatch: ");const n=Xh(this.elementShape,this.tensors,t);return 0===this.size()?Wa([],[0].concat(n)):Zo((()=>{const e=this.tensors.map((e=>mu(e,n)));return yu(e,0)}))}}function tm(e,t,n){const[r,a]=lh("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i="fusedbatchnorm"===r,u=lh("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=lh("strides",e,t,n),p=mh(e,t,n),c=lh("dataFormat",e,t,n).toUpperCase(),d=lh("dilations",e,t,n),[h,m]=lh("args",e,t,n);return{stride:l,pad:p,dataFormat:c,dilations:d,biasArg:h,preluArg:m,activationFunc:a,leakyreluAlpha:lh("leakyreluAlpha",e,t,n)}}function nm(e,t,n){return{boxes:lh("boxes",e,t,n),scores:lh("scores",e,t,n),maxOutputSize:lh("maxOutputSize",e,t,n),iouThreshold:lh("iouThreshold",e,t,n),scoreThreshold:lh("scoreThreshold",e,t,n),softNmsSigma:lh("softNmsSigma",e,t,n)}}class rm{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ti(0),this.tensorMap=new Map,ti(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Zo((()=>{const e=lc(t),r=n.length,a=e.length;q(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];ti(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Zo((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Jp(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function am(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return Zo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[di(lh("a",e,t,n),lh("b",e,t,n))];case"AddN":return[Ui(lh("tensors",e,t,n))];case"FloorMod":case"Mod":return[Gl(lh("a",e,t,n),lh("b",e,t,n))];case"Mul":return[fi(lh("a",e,t,n),lh("b",e,t,n))];case"RealDiv":case"Div":return[mi(lh("a",e,t,n),lh("b",e,t,n))];case"DivNoNan":return[Qu(lh("a",e,t,n),lh("b",e,t,n))];case"FloorDiv":return[hi(lh("a",e,t,n),lh("b",e,t,n))];case"Sub":return[Di(lh("a",e,t,n),lh("b",e,t,n))];case"Minimum":return[ql(lh("a",e,t,n),lh("b",e,t,n))];case"Maximum":return[Li(lh("a",e,t,n),lh("b",e,t,n))];case"Pow":return[$i(lh("a",e,t,n),lh("b",e,t,n))];case"SquaredDifference":return[Gp(lh("a",e,t,n),lh("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Zo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Fi(lh("x",e,t,n))];case"Acos":return[Hi(lh("x",e,t,n))];case"Acosh":return[Ki(lh("x",e,t,n))];case"Asin":return[Ji(lh("x",e,t,n))];case"Asinh":return[Xi(lh("x",e,t,n))];case"Atan":return[Qi(lh("x",e,t,n))];case"Atan2":return[Zi(lh("x",e,t,n),lh("y",e,t,n))];case"Atanh":return[eu(lh("x",e,t,n))];case"Ceil":return[Iu(lh("x",e,t,n))];case"Complex":return[za(lh("real",e,t,n),lh("imag",e,t,n))];case"Cos":return[Wu(lh("x",e,t,n))];case"Cosh":return[Hu(lh("x",e,t,n))];case"Elu":return[el(lh("x",e,t,n))];case"Erf":return[tl(lh("x",e,t,n))];case"Exp":return[nl(lh("x",e,t,n))];case"Expm1":return[al(lh("x",e,t,n))];case"Floor":return[il(lh("x",e,t,n))];case"Log":return[xl(lh("x",e,t,n))];case"Log1p":return[vl(lh("x",e,t,n))];case"Imag":return[cl(lh("x",e,t,n))];case"Neg":return[Nl(lh("x",e,t,n))];case"Reciprocal":return[Np(lh("x",e,t,n))];case"Real":return[vp(lh("x",e,t,n))];case"Relu":return[kp(lh("x",e,t,n))];case"Round":return[Mp(lh("x",e,t,n))];case"Selu":return[Dp(lh("x",e,t,n))];case"Sigmoid":return[bu(lh("x",e,t,n))];case"Sin":return[Rp(lh("x",e,t,n))];case"Sign":return[Cp(lh("x",e,t,n))];case"Sinh":return[Bp(lh("x",e,t,n))];case"Softplus":return[kl(lh("x",e,t,n))];case"Sqrt":return[gi(lh("x",e,t,n))];case"Square":return[yi(lh("x",e,t,n))];case"Tanh":return[xu(lh("x",e,t,n))];case"Tan":return[Zp(lh("x",e,t,n))];case"ClipByValue":return[Mu(lh("x",e,t,n),lh("clipValueMin",e,t,n),lh("clipValueMax",e,t,n))];case"Relu6":return[Sp(lh("x",e,t,n))];case"Rsqrt":return[$p(ph(e.inputNames[0],t,n))];case"Prod":return[cp(lh("x",e,t,n),lh("axes",e,t,n))];case"LeakyRelu":return[fl(lh("x",e,t,n),lh("alpha",e,t,n))];case"Prelu":return[pp(lh("x",e,t,n),lh("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=lh("thenBranch",e,t,n),a=lh("elseBranch",e,t,n),s=lh("cond",e,t,n),o=lh("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=lh("body",e,t,n),a=lh("cond",e,t,n),s=lh("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[fh(lh("pred",e,t,n))];case"Switch":{const r=lh("pred",e,t,n);let a=lh("data",e,t,n);return a.kept||(a=fh(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==ph(e,t,n)));return r?[fh(ph(r,t,n))]:void 0}case"Enter":{const r=lh("frameName",e,t,n),a=lh("tensor",e,t,n);return n.enterFrame(r),[fh(a)]}case"Exit":{const r=lh("tensor",e,t,n);return n.exitFrame(),[fh(r)]}case"NextIteration":{const r=lh("tensor",e,t,n);return n.nextIteration(),[fh(r)]}case"TensorArrayV3":{const r=lh("size",e,t,n),a=lh("dtype",e,t,n),s=lh("elementShape",e,t,n),o=lh("dynamicSize",e,t,n),i=lh("clearAfterRead",e,t,n),u=lh("identicalElementShapes",e,t,n),l=lh("name",e,t,n),p=new Zh(l,a,r,s,u,o,i);return n.addTensorArray(p),[p.idTensor,Ti(1)]}case"TensorArrayWriteV3":{const r=lh("tensorArrayId",e,t,n),a=lh("index",e,t,n),s=lh("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=lh("tensorArrayId",e,t,n),a=lh("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=lh("tensorArrayId",e,t,n),a=lh("indices",e,t,n),s=lh("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=lh("tensorArrayId",e,t,n),a=lh("indices",e,t,n),s=lh("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=lh("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=lh("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=lh("tensorArrayId",e,t,n),a=lh("tensor",e,t,n),s=lh("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=lh("tensorArrayId",e,t,n);return[Ti(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=lh("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=lh("tensorListId",e,t,n),a=lh("index",e,t,n),s=lh("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=lh("tensorListId",e,t,n),a=lh("index",e,t,n),s=lh("elementShape",e,t,n),o=lh("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=lh("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new em([],n,e.dtype,r),o=lc(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(lh("tensor",e,t,n),r,lh("elementShape",e,t,n),lh("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=lh("elementShape",e,t,n),a=lh("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new em([],e,t,n)}(r,a,lh(s,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=lh("tensorListId",e,t,n),a=lh("indices",e,t,n),s=lh("elementShape",e,t,n),o=lh("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=lh("tensorListId",e,t,n),a=lh("elementShape",e,t,n),s=lh("elementDType",e,t,n),o=lh("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Yh(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=lc(e);return new em(a,t,r)}(lh("tensor",e,t,n),lh("elementShape",e,t,n),lh("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=lh("tensorListId",e,t,n),a=n.getTensorList(r.id),s=lh("dtype",e,t,n),o=lh("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=lh("tensorListId",e,t,n),a=lh("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=lh("tensorListId",e,t,n),a=lh("elementShape",e,t,n),s=lh("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=lh("tensor",e,t,n),a=lh("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Qh(e.shape.slice(1),n),o=0===r?0:e.size/r,i=Zo((()=>{const n=[];e=mu(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=mu(wu(e,i,u),s)}return e.dispose(),n})),u=new em([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,lh("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Zo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=lh("stride",e,t,n),a=lh("pad",e,t,n),s=lh("dataFormat",e,t,n).toUpperCase(),o=lh("dilation",e,t,n);return[Ru(lh("x",e,t,n),lh("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=lh("strides",e,t,n),a=mh(e,t,n),s=lh("dataFormat",e,t,n).toUpperCase(),o=lh("dilations",e,t,n);return[Cu(lh("x",e,t,n),lh("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:p}=tm(e,t,n);return[Ic({x:lh("x",e,t,n),filter:lh("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:p}=tm(e,t,n);return[Dc({x:lh("x",e,t,n),filter:lh("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=lh("outputShape",e,t,n),a=lh("strides",e,t,n),s=mh(e,t,n);return[Lu(lh("x",e,t,n),lh("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=lh("strides",e,t,n),a=mh(e,t,n),s=lh("dilations",e,t,n),o=lh("dataFormat",e,t,n).toUpperCase();return[ju(lh("input",e,t,n),lh("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=lh("strides",e,t,n),a=lh("pad",e,t,n),s=lh("dataFormat",e,t,n).toUpperCase(),o=lh("dilations",e,t,n);return[Pu(lh("x",e,t,n),lh("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=lh("strides",e,t,n),a=lh("pad",e,t,n),s=lh("kernelSize",e,t,n);return[fu(lh("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=lh("strides",e,t,n),a=lh("pad",e,t,n),s=lh("kernelSize",e,t,n);return[Vl(lh("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=lh("strides",e,t,n),a=lh("pad",e,t,n),s=lh("kernelSize",e,t,n),o=lh("includeBatchInIndex",e,t,n),{result:i,indexes:u}=Hl(lh("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=lh("strides",e,t,n),a=lh("pad",e,t,n),s=lh("kernelSize",e,t,n);return[gu(lh("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=lh("strides",e,t,n),a=lh("pad",e,t,n),s=lh("kernelSize",e,t,n);return[Wl(lh("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=lh("strides",e,t,n),a=lh("pad",e,t,n),s=lh("dilations",e,t,n),o=r[1],i=r[2],u=s[1],l=s[2];return[Yu(lh("x",e,t,n),lh("filter",e,t,n),[o,i],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Zo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=lh("shape",e,t,n),a=lh("dtype",e,t,n);return[Ii(r,lh("value",e,t,n),a)]}case"LinSpace":return[bl(lh("start",e,t,n),lh("stop",e,t,n),lh("num",e,t,n))];case"Multinomial":{const r=lh("logits",e,t,n),a=lh("numSamples",e,t,n),s=lh("seed",e,t,n);return[Xl(r,a,s)]}case"OneHot":{const r=lh("indices",e,t,n),a=lh("depth",e,t,n),s=lh("onValue",e,t,n),o=lh("offValue",e,t,n);return[no(r,a,s,o)]}case"Ones":return[ep(lh("shape",e,t,n),lh("dtype",e,t,n))];case"OnesLike":return[tp(lh("x",e,t,n))];case"RandomUniform":return[wp(lh("shape",e,t,n),lh("minval",e,t,n),lh("maxval",e,t,n),lh("dtype",e,t,n))];case"Range":return[xp(lh("start",e,t,n),lh("stop",e,t,n),lh("step",e,t,n),lh("dtype",e,t,n))];case"TruncatedNormal":{const r=lh("shape",e,t,n),a=lh("mean",e,t,n),s=lh("stdDev",e,t,n),o=lh("seed",e,t,n);return[oc(r,a,s,lh("dtype",e,t,n),o)]}case"Zeros":return[Zl(lh("shape",e,t,n),lh("dtype",e,t,n))];case"ZerosLike":return[bi(lh("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=nm(e,t,n),l=await bd.nonMaxSuppressionWithScoreAsync(r,a,s,o,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=nm(e,t,n),u=lh("padToMaxOutputSize",e,t,n),l=await bd.nonMaxSuppressionPaddedAsync(r,a,s,o,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=nm(e,t,n);return[await bd.nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=Cs(lh("condition",e,t,n),"bool"),a=[await dc(r)];return r.dispose(),a}case"ListDiff":return Fp(lh("x",e,t,n),lh("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Zo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=lh("x",e,t,n),a=lh("k",e,t,n),s=lh("sorted",e,t,n),o=sc(r,a,s);return[o.values,o.indices]}case"Unique":{const r=lh("x",e,t,n),a=ic(r);return[a.values,a.indices]}case"UniqueV2":{const r=lh("x",e,t,n),a=lh("axis",e,t,n),s=ic(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Zo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=lh("images",e,t,n),a=lh("size",e,t,n),s=lh("alignCorners",e,t,n),o=lh("halfPixelCenters",e,t,n);return[bd.resizeBilinear(r,[a[0],a[1]],s,o)]}case"ResizeNearestNeighbor":{const r=lh("images",e,t,n),a=lh("size",e,t,n),s=lh("alignCorners",e,t,n),o=lh("halfPixelCenters",e,t,n);return[bd.resizeNearestNeighbor(r,[a[0],a[1]],s,o)]}case"CropAndResize":{const r=lh("image",e,t,n),a=lh("boxes",e,t,n),s=lh("boxInd",e,t,n),o=lh("cropSize",e,t,n),i=lh("method",e,t,n),u=lh("extrapolationValue",e,t,n);return[bd.cropAndResize(r,a,s,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Zo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=lh("default",e,t,n);return[ph(e.name,t,n)||r];case"Placeholder":return[ph(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[fh(lh("x",e,t,n))];case"IdentityN":return lh("x",e,t,n).map((e=>fh(e)));case"Snapshot":return[fh(lh("x",e,t,n))];case"Shape":return[ec(lh("x",e,t,n).shape,"int32")];case"ShapeN":return lh("x",e,t,n).map((e=>ec(e.shape)));case"Size":return[Ti(lh("x",e,t,n).size,"int32")];case"Rank":return[Ti(lh("x",e,t,n).rank,"int32")];case"NoOp":return[Ti(1)];case"Print":const a=lh("x",e,t,n),s=lh("data",e,t,n),o=lh("message",e,t,n),i=lh("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Zo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Ju(lh("a",e,t,n),lh("b",e,t,n))];case"NotEqual":return[Ql(lh("a",e,t,n),lh("b",e,t,n))];case"Greater":return[ll(lh("a",e,t,n),lh("b",e,t,n))];case"GreaterEqual":return[pl(lh("a",e,t,n),lh("b",e,t,n))];case"Less":return[gl(lh("a",e,t,n),lh("b",e,t,n))];case"LessEqual":return[yl(lh("a",e,t,n),lh("b",e,t,n))];case"LogicalAnd":return[Bl(lh("a",e,t,n),lh("b",e,t,n))];case"LogicalNot":return[Ll(lh("a",e,t,n))];case"LogicalOr":return[Pl(lh("a",e,t,n),lh("b",e,t,n))];case"Select":case"SelectV2":return[Xu(lh("condition",e,t,n),lh("a",e,t,n),lh("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Zo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[to(lh("a",e,t,n),lh("b",e,t,n),lh("transposeA",e,t,n),lh("transposeB",e,t,n))];case"Transpose":return[ro(lh("x",e,t,n),lh("perm",e,t,n))];case"_FusedMatMul":const[r,a]=lh("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=lh("numArgs",e,t,n),u=lh("leakyreluAlpha",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,p]=lh("args",e,t,n);return[Oc({a:lh("a",e,t,n),b:lh("b",e,t,n),transposeA:lh("transposeA",e,t,n),transposeB:lh("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:p,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Zo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ku(lh("x",e,t,n),lh("mean",e,t,n),lh("variance",e,t,n),lh("offset",e,t,n),lh("scale",e,t,n),lh("epsilon",e,t,n))];case"LRN":return[wl(lh("x",e,t,n),lh("radius",e,t,n),lh("bias",e,t,n),lh("alpha",e,t,n),lh("beta",e,t,n))];case"Softmax":return[Wp(lh("x",e,t,n))];case"LogSoftmax":return[Al(lh("x",e,t,n))];case"SparseToDense":return[bc(lh("sparseIndices",e,t,n),lh("outputShape",e,t,n),lh("sparseValues",e,t,n),lh("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Zo((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=lh("axis",e,t,n),a=lh("keepDims",e,t,n);return[El(lh("x",e,t,n),r,a)]}case"Mean":{const r=lh("axis",e,t,n),a=lh("keepDims",e,t,n);return[Kl(lh("x",e,t,n),r,a)]}case"Min":{const r=lh("axis",e,t,n),a=lh("keepDims",e,t,n);return[Ul(lh("x",e,t,n),r,a)]}case"Sum":{const r=lh("axis",e,t,n),a=lh("keepDims",e,t,n);return[Tl(lh("x",e,t,n),r,a)]}case"All":{const r=lh("axis",e,t,n),a=lh("keepDims",e,t,n);return[qi(lh("x",e,t,n),r,a)]}case"Any":{const r=lh("axis",e,t,n),a=lh("keepDims",e,t,n);return[ji(lh("x",e,t,n),r,a)]}case"ArgMax":{const r=lh("axis",e,t,n);return[Gi(lh("x",e,t,n),r)]}case"ArgMin":{const r=lh("axis",e,t,n);return[Yi(lh("x",e,t,n),r)]}case"Prod":{const r=lh("axis",e,t,n),a=lh("keepDims",e,t,n);return[cp(lh("x",e,t,n),r,a)]}case"Cumsum":{const r=lh("axis",e,t,n),a=lh("exclusive",e,t,n),s=lh("reverse",e,t,n);return[Ku(lh("x",e,t,n),r,a,s)]}case"Bincount":const r=lh("x",e,t,n),a=lh("weights",e,t,n),s=lh("size",e,t,n);return[Au(r,a,s)];case"DenseBincount":{const r=lh("x",e,t,n),a=lh("weights",e,t,n),s=lh("size",e,t,n),o=lh("binaryOutput",e,t,n);return[Uu(r,a,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Zo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=lh("n",e,t,n),a=lh("axis",e,t,n);let s=lh("tensors",e,t,n);return s=s.slice(0,r),[yu(s,a)]}case"Gather":{const r=lh("x",e,t,n),a=lh("indices",e,t,n);return[ul(r,Cs(a,"int32"),0)]}case"GatherV2":{const r=lh("axis",e,t,n),a=lh("batchDims",e,t,n),s=lh("x",e,t,n),o=lh("indices",e,t,n);return[ul(s,Cs(o,"int32"),r,a)]}case"Reverse":{const r=lh("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=lh("x",e,t,n);return[Ep(s,a)]}case"ReverseV2":{const r=lh("axis",e,t,n),a=lh("x",e,t,n);return[Ep(a,r)]}case"Slice":{const r=lh("begin",e,t,n),a=lh("size",e,t,n);return[wu(lh("x",e,t,n),r,a)]}case"StridedSlice":{const r=lh("begin",e,t,n),a=lh("end",e,t,n),s=lh("strides",e,t,n),o=lh("beginMask",e,t,n),i=lh("endMask",e,t,n),u=lh("ellipsisMask",e,t,n),l=lh("newAxisMask",e,t,n),p=lh("shrinkAxisMask",e,t,n),c=lh("x",e,t,n);return[Qp(c,r,a,s,o,i,u,l,p)]}case"Pack":return Zo((()=>{const r=lh("axis",e,t,n),a=lh("tensors",e,t,n),s=a[0].shape,o=Yp(a[0]).shape,i=a.map((e=>{const t=Q(e.shape,s);if(!t&&!Q(Yp(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:mu(e,s)}));return[Jp(i,r)]}));case"Unpack":{const r=lh("axis",e,t,n),a=lh("tensor",e,t,n);return lc(a,r)}case"Tile":{const r=lh("reps",e,t,n);return[sl(lh("x",e,t,n),r)]}case"Split":case"SplitV":{const r=lh("axis",e,t,n),a=lh("numOrSizeSplits",e,t,n),s=lh("x",e,t,n);return qp(s,a,r)}case"ScatterNd":{const r=lh("indices",e,t,n),a=lh("values",e,t,n),s=lh("shape",e,t,n);return[yc(r,a,s)]}case"GatherNd":{const r=lh("x",e,t,n),a=lh("indices",e,t,n);return[wc(r,a)]}case"SparseToDense":{const r=lh("sparseIndices",e,t,n),a=lh("outputShape",e,t,n),s=lh("sparseValues",e,t,n),o=lh("defaultValue",e,t,n);return[bc(r,s,a,s.dtype===o.dtype?o:Cs(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Zo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Hp(lh("x",e,t,n))];case"IFFT":return[Kp(lh("x",e,t,n))];case"RFFT":return[jp(lh("x",e,t,n))];case"IRFFT":return[Up(lh("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Zo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Cs(lh("x",e,t,n),lh("dtype",e,t,n))];case"ExpandDims":{const r=lh("axis",e,t,n);return[rl(lh("x",e,t,n),r)]}case"Squeeze":{const r=lh("axis",e,t,n);return[Yp(lh("x",e,t,n),r)]}case"Reshape":return[mu(lh("x",e,t,n),lh("shape",e,t,n))];case"MirrorPad":return[jl(lh("x",e,t,n),lh("padding",e,t,n),lh("mode",e,t,n))];case"PadV2":case"Pad":return[rp(lh("x",e,t,n),lh("padding",e,t,n),lh("constantValue",e,t,n))];case"SpaceToBatchND":{const r=lh("blockShape",e,t,n),a=lh("paddings",e,t,n);return[up(lh("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=lh("blockShape",e,t,n),a=lh("crops",e,t,n);return[Nu(lh("x",e,t,n),r,a)]}case"DepthToSpace":{const r=lh("blockSize",e,t,n),a=lh("dataFormat",e,t,n).toUpperCase();return[qu(lh("x",e,t,n),r,a)]}case"BroadcastTo":return[_u(lh("x",e,t,n),lh("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=lh("keyDType",e,t,n),s=lh("valueDType",e,t,n),o=new rm(a,s);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=lh("tableHandle",e,t,n,r),s=lh("keys",e,t,n),o=lh("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=lh("tableHandle",e,t,n,r),s=lh("keys",e,t,n),o=lh("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=uh(e.op);if(a&&a.customExecutor)return a.customExecutor(new Gh(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return $e(a)?a.then((e=>[].concat(e))):[].concat(a)}class sm{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function om(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>hh(e)[0]));let p=[];null!=r&&(p=r.map((e=>hh(e.name)[0])));const c=[...t];for(;c.length>0;){const e=c.pop();(pm(e)||cm(e)||dm(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===p.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),c.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}const im=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],um=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],lm=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function pm(e){return im.indexOf(e.op)>=0}function cm(e){return um.indexOf(e.op)>=0}function dm(e){return lm.indexOf(e.op)>=0}class hm{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new hm(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=om(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],o=Object.keys(a).map((e=>hh(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[hh(e)[0]])),a=t.map((e=>hh(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const o=this.getCompilationKey(r,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,s),this.compiledMap.set(o,i));const u={},l={};return Zo((()=>{const n=new sm(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=hh(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=am(t,r,n,this._resourceManager);if($e(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,o)}}return null==this.parent&&n.dispose(s),t.map((e=>ph(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[dh(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new sm(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>ph(e,o,s))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),p=new Set([...u,...l,...this.weightIds]);return Object.keys(o).forEach((e=>{o[e].forEach((e=>{!e||e.isDisposed||p.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(p),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[hh(e)[0]])),o=n.map((e=>hh(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:p,syncInputs:c}=om(e,i,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=hh(t),a=[];a[r]=e[t],h[n]=a}));const m={},f=this.getFrozenTensorIds(h),g={};for(;d.length>0;){const e=this.processStack(s,d,t,h,g,f,o,m,u);await Promise.all(e)}null!=p||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!pm(e)&&!ph(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let p="";if("Enter"===e.node.op&&lh("isConstant",e.node,r,n)&&([p]=ch(e.node.name,n)),null==r[e.node.name]){const c=am(e.node,r,n,this._resourceManager);p||([p]=ch(e.node.name,n));const d=n.currentContext;$e(c)?l.push(c.then((l=>(r[p]=l,n.currentContext=d,this.checkTensorForDisposal(p,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[p]=c,this.checkTensorForDisposal(p,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=ch(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!ph(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!ph(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=hh(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;q(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&q(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=hh(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=hh(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class mm{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class fm{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new mm}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Js(e,this.loadOptions);else{const t=rs(e,this.loadOptions);if(0===t.length)t.push(Js(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Ua(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new hm(Oh.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Oh.Instance.transformGraph(e.modelInitializer);this.initializer=new hm(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=ns(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof la||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function gm(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new fm(e,t);return await n.load(),n}var ym=function(e,t){return(ym=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function bm(e,t){function n(){this.constructor=e}ym(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var wm=function(){return(wm=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function xm(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function i(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function vm(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(a=(a=o.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}function Nm(e){var t=e.shape[2],n=Gi(e,2),r=mu(n,[-1]);return no(r,t)}function km(e,t){return Zo((function(){return Cs(ll(e,Ti(t)),"int32")}))}function Sm(e,t){var n=t.shape,r=n[0],a=n[1],s=n[2];return Zo((function(){var n=Nm(t),o=rl(xp(0,s,1,"int32"),1),i=Cs(to(n,o),"int32"),u=mu(i,[r,a]),l=di(u,Ti(1,"int32"));return Di(function(e,t){return fi(e,t)}(l,e),Ti(1,"int32"))}))}function Em(e){var t=e.shape,n=t[0],r=t[1],a=t[2];return Zo((function(){var t=Nm(e),s=rl(xp(0,a,1,"int32"),1),o=Cs(to(t,s),"int32");return mu(o,[n,r])}))}var Tm=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;q(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return e.prototype.predict=function(e){var t=this;return Zo((function(){var n=t.preprocessInput(Cs(e,"float32")),r=rl(n,0),a=t.model.predict(r).map((function(e){return Yp(e,[0])})),s=t.nameOutputResults(a);return{heatmapScores:bu(s.heatmap),offsets:s.offsets,displacementFwd:s.displacementFwd,displacementBwd:s.displacementBwd,segmentation:s.segmentation,partHeatmaps:s.partHeatmaps,longOffsets:s.longOffsets,partOffsets:s.partOffsets}}))},e.prototype.dispose=function(){this.model.dispose()},e}(),Am=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return bm(t,e),t.prototype.preprocessInput=function(e){return Zo((function(){return Di(mi(e,127.5),1)}))},t.prototype.nameOutputResults=function(e){return{offsets:e[0],segmentation:e[1],partHeatmaps:e[2],longOffsets:e[3],heatmap:e[4],displacementFwd:e[5],displacementBwd:e[6],partOffsets:e[7]}},t}(Tm),_m=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Im=_m.length,Mm=_m.reduce((function(e,t,n){return e[t]=n,e}),{});function $m(e,t,n){var r=e[0],a=e[1],s=t[0],o=t[1],i=n.top,u=n.bottom;return[o/(n.left+n.right+a),s/(i+u+r)]}function Dm(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+Im)}}function Om(e,t,n){var r=Dm(e.heatmapY,e.heatmapX,e.id,n),a=r.y,s=r.x;return{x:e.heatmapX*t+s,y:e.heatmapY*t+a}}function Fm(e,t,n){return e<t?t:e>n?n:e}function Cm(e,t){return{x:e.x+t.x,y:e.y+t.y}}function Rm(e,t,n){void 0===n&&(n=.3);for(var r=0,a=0,s=0;s<e.length;s++)t.keypoints[s].score>n&&(a+=1,r+=Math.pow(e[s].x-t.keypoints[s].position.x,2)+Math.pow(e[s].y-t.keypoints[s].position.y,2));return 0===a?r=1/0:r/=a,r}function Bm(e,t,n,r,a,s,o){for(var i=o[0],u=o[1],l=n(e),p=l.y*r+l.x,c=a[Im*(2*p)+t],d=a[Im*(2*p+1)+t],h=e.y+c,m=e.x+d,f=0;f<s;f++){h=Math.min(h,i-1);var g=n({x:m=Math.min(m,u-1),y:h}),y=g.y*r+g.x;h+=c=a[Im*(2*y)+t],m+=d=a[Im*(2*y+1)+t]}return{x:m,y:h}}function Lm(e,t,n,r,a,s,o,i,u,l){for(var p=a[0],c=a[1],d=s[0],h=s[1],m=i[0],f=i[1],g=[],y=function(e){return function(e,t,n,r){var a=t[0],s=t[1],o=n[0],i=n[1],u=Math.round(((a+e.y+1)*i-1)/r);return{x:Math.round(((s+e.x+1)*o-1)/r),y:u}}(e,[p,c],[d,h],u)},b=0;b<r;b++){var w=Bm(e,b,y,o,t,l,[m,f]);g.push(w)}for(var x=-1,v=1/0,N=0;N<n.length;N++){var k=Rm(g,n[N]);k<v&&(x=N,v=k)}return x}function Pm(e,t){var n=e[0],r=e[1];return[Math.round((r-1)/t+1),Math.round((n-1)/t+1)]}function zm(e,t,n,r,a,s,o,i,u,l,p){for(var c=o[0],d=o[1],h=e.shape,m=h[0],f=h[1],g=t.shape.slice(0,2),y=g[0],b=g[1],w=mu(t,[y,b,2,Im]),x=new Float32Array(p*Im*3).fill(0),v=0;v<n.length;v++)for(var N=v*Im*3,k=n[v],S=0;S<Im;S++){var E=k.keypoints[S],T=N+3*S;x[T]=E.score,x[T+1]=E.position.y,x[T+2]=E.position.x}var A=$m([r,a],[c,d],i),_=A[0],I=A[1],M=Wa(x,[p,Im,3]),$=i.top,D=i.left,O={variableNames:["segmentation","longOffsets","poses"],outputShape:[m,f],userCode:"\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, "+$+", "+I+", "+s+");\n      float stridedW = convertToPositionInOutputFloat(\n        w, "+D+", "+_+", "+s+");\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < "+p+"; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < "+Im+"; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < "+u+"; s++) {\n            int yRounded = round(min(y, float("+(r-1)+")));\n            int xRounded = round(min(x, float("+(a-1)+")));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, "+$+", "+I+", "+s+");\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, "+D+", "+_+", "+s+");\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > "+l+") {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  "};return pi().compileAndRun(O,[e,w,M])}function Vm(){return"webgl"===si()}function Wm(e,t,n,r,a,s,o,i,u,l,p,c){var d=o[0],h=o[1];return void 0===u&&(u=.2),void 0===l&&(l=8),void 0===p&&(p=.3),void 0===c&&(c=10),xm(this,void 0,void 0,(function(){var o,m,f,g,y;return vm(this,(function(b){switch(b.label){case 0:return o=n.filter((function(e){return e.score>=u})),Vm()?(f=Zo((function(){var n=zm(e,t,o,r,a,s,[d,h],i,l,p,c),u=Jo().makeTensorFromDataId(n.dataId,n.shape,n.dtype);return o.map((function(e,t){return function(e,t){return Zo((function(){return Cs(Ju(e,Ti(t)),"int32")}))}(u,t)}))})),[4,Promise.all(f.map((function(e){return e.data()})))]):[3,2];case 1:return m=b.sent(),f.forEach((function(e){return e.dispose()})),[3,5];case 2:return[4,e.data()];case 3:return g=b.sent(),[4,t.data()];case 4:y=b.sent(),m=function(e,t,n,r,a,s,o,i,u,l){var p=o[0],c=o[1];void 0===l&&(l=5);for(var d=n.map((function(e){return new Uint8Array(r*a).fill(0)})),h=i.top,m=i.left,f=$m([r,a],[p,c],i),g=f[0],y=f[1],b=Pm([p,c],s)[0],w=0;w<r;w+=1)for(var x=0;x<a;x+=1){var v=w*a+x;if(1===e[v]){var N=Lm({x,y:w},t,n,l,[h,m],[g,y],b,[r,a],s,u);N>=0&&(d[N][v]=1)}}return d}(g,y,o,r,a,s,[d,h],i,l),b.label=5;case 5:return[2,m.map((function(e,t){return{data:e,pose:o[t],width:a,height:r}}))]}}))}))}function Hm(e,t,n,r,a,s,o,i,u,l,p,c,d){var h=i[0],m=i[1];return void 0===l&&(l=.2),void 0===p&&(p=8),void 0===c&&(c=.3),void 0===d&&(d=10),xm(this,void 0,void 0,(function(){var i,f,g,y,b,w;return vm(this,(function(x){switch(x.label){case 0:return i=r.filter((function(e){return e.score>=l})),Vm()?(g=Zo((function(){var r=zm(e,t,i,a,s,o,[h,m],u,p,c,d),l=Jo().makeTensorFromDataId(r.dataId,r.shape,r.dtype);return i.map((function(e,t){return function(e,t,n){return Zo((function(){return Di(fi(Cs(Ju(e,Ti(n)),"int32"),di(t,1)),1)}))}(l,n,t)}))})),[4,Promise.all(g.map((function(e){return e.data()})))]):[3,2];case 1:return f=x.sent(),g.forEach((function(e){return e.dispose()})),[3,6];case 2:return[4,e.data()];case 3:return y=x.sent(),[4,t.data()];case 4:return b=x.sent(),[4,n.data()];case 5:w=x.sent(),f=function(e,t,n,r,a,s,o,i,u,l,p){var c=i[0],d=i[1];void 0===p&&(p=5);for(var h=r.map((function(e){return new Int32Array(a*s).fill(-1)})),m=u.top,f=u.left,g=$m([a,s],[c,d],u),y=g[0],b=g[1],w=Pm([c,d],o)[0],x=0;x<a;x+=1)for(var v=0;v<s;v+=1){var N=x*s+v;if(1===e[N]){var k=Lm({x:v,y:x},t,r,p,[m,f],[y,b],w,[a,s],o,l);k>=0&&(h[k][N]=n[N])}}return h}(y,b,w,i,a,s,o,[h,m],u,p),x.label=6;case 6:return[2,f.map((function(e,t){return{pose:i[t],data:e,height:a,width:s}}))]}}))}))}function Km(e){return Math.floor(e/2)}[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(e){var t=e[0],n=e[1];return[Mm[t],Mm[n]]}));var Um=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(Km(e),e);)this.exchange(e,Km(e)),e=Km(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function qm(e,t,n,r,a,s){for(var o=s.shape,i=o[0],u=o[1],l=!0,p=Math.max(n-a,0),c=Math.min(n+a+1,i),d=p;d<c;++d){for(var h=Math.max(r-a,0),m=Math.min(r+a+1,u),f=h;f<m;++f)if(s.get(d,f,e)>t){l=!1;break}if(!l)break}return l}var jm=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(e){var t=e[0],n=e[1];return[Mm[t],Mm[n]]})),Gm=jm.map((function(e){return e[1]})),Ym=jm.map((function(e){return e[0]}));function Jm(e,t,n,r){return{y:Fm(Math.round(e.y/t),0,n-1),x:Fm(Math.round(e.x/t),0,r-1)}}function Xm(e,t,n,r,a,s,o,i){void 0===i&&(i=2);for(var u=r.shape,l=u[0],p=u[1],c=function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,Jm(t.position,s,l,p),o),d=Cm(t.position,c),h=0;h<i;h++){var m=Jm(d,s,l,p),f=Dm(m.y,m.x,n,a);d=Cm({x:m.x*s,y:m.y*s},{x:f.x,y:f.y})}var g=Jm(d,s,l,p),y=r.get(g.y,g.x,n);return{position:d,part:_m[n],score:y}}function Qm(e,t,n,r,a,s){var o=t.shape[2],i=Gm.length,u=new Array(o),l=e.part,p=e.score,c=Om(l,r,n);u[l.id]={score:p,part:_m[l.id],position:c};for(var d=i-1;d>=0;--d){var h=Gm[d],m=Ym[d];u[h]&&!u[m]&&(u[m]=Xm(d,u[h],m,t,n,r,s))}for(d=0;d<i;++d)h=Ym[d],m=Gm[d],u[h]&&!u[m]&&(u[m]=Xm(d,u[h],m,t,n,r,a));return u}function Zm(e,t,n,r){var a=n.x,s=n.y;return e.some((function(e){var n=e.keypoints[r].position;return function(e,t,n,r){var a=n-e,s=r-t;return a*a+s*s}(s,a,n.y,n.x)<=t}))}function ef(e,t,n){return n.reduce((function(n,r,a){var s=r.position,o=r.score;return Zm(e,t,s,a)||(n+=o),n}),0)/n.length}function tf(e,t,n,r,a,s,o,i){void 0===o&&(o=.5),void 0===i&&(i=20);for(var u=[],l=function(e,t,n){for(var r=n.shape,a=r[0],s=r[1],o=r[2],i=new Um(a*s*o,(function(e){return e.score})),u=0;u<a;++u)for(var l=0;l<s;++l)for(var p=0;p<o;++p){var c=n.get(u,l,p);c<e||qm(p,c,u,l,1,n)&&i.enqueue({score:c,part:{heatmapY:u,heatmapX:l,id:p}})}return i}(o,0,e),p=i*i;u.length<s&&!l.empty();){var c=l.dequeue();if(!Zm(u,p,Om(c.part,a,t),c.part.id)){var d=Qm(c,e,t,a,n,r),h=ef(u,p,d);u.push({keypoints:d,score:h})}}return u}var nf,rf=[-123.15,-115.9,-103.06],af=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return bm(t,e),t.prototype.preprocessInput=function(e){return di(e,rf)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1],r=e[2],a=e[3],s=e[4],o=e[5];return{offsets:s,segmentation:e[6],partHeatmaps:o,longOffsets:a,heatmap:r,displacementFwd:n,displacementBwd:t,partOffsets:e[7]}},t}(Tm),sf="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",of="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function uf(e){if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)return function(e){if(0!==e.offsetHeight&&0!==e.offsetWidth)return[e.offsetHeight,e.offsetWidth];if(null!=e.height&&null!=e.width)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(e);if("undefined"!=typeof ImageData&&e instanceof ImageData)return[e.height,e.width];if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(e);if(e instanceof la)return[e.shape[0],e.shape[1]];throw new Error("error: Unknown input type: "+e+".")}function lf(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var pf={low:"low",medium:"medium",high:"high",full:"full"},cf=((nf={})[pf.low]=.25,nf[pf.medium]=.5,nf[pf.high]=.75,nf[pf.full]=1,nf);function df(e,t,n){var r=n[0],a=n[1],s=function(e){if("string"==typeof e){var t=cf[e];return q("number"==typeof t,(function(){return"string value of inputResolution must be one of "+Object.values(pf).join(",")+" but was "+e+"."})),t}return q("number"==typeof e&&e<=2&&e>=.1,(function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+e})),e}(e);return[lf(r*s,t),lf(a*s,t)]}function hf(e,t,n){var r=t[0],a=t[1];void 0===n&&(n=!1);var s,o,i,u,l,p,c=e.shape,d=c[0],h=c[1]/d;if(h>a/r){s=a;var m=r-(o=Math.ceil(s/h));i=0,u=0,l=Math.floor(m/2),p=r-(o+l)}else{o=r;var f=a-(s=Math.ceil(r*h));i=Math.floor(f/2),u=a-(s+i),l=0,p=0}return{resizedAndPadded:Zo((function(){var t;return t=n?bd.resizeBilinear(Ep(e,1),[o,s]):bd.resizeBilinear(e,[o,s]),op(t,[[l,p],[i,u],[0,0]])})),paddedBy:[[l,p],[i,u]]}}function mf(e,t,n,r,a){var s=t[0],o=t[1],i=n[0],u=n[1],l=r[0],p=l[0],c=l[1],d=r[1],h=d[0],m=d[1];return void 0===a&&(a=!1),Zo((function(){var t=bd.resizeBilinear(e,[i,u],!0);return a&&(t=bu(t)),function(e,t,n){var r=t[0],a=t[1],s=n[0],o=s[0],i=s[1],u=n[1],l=u[0],p=u[1];return Zo((function(){var t=rl(e);return Yp(bd.cropAndResize(t,[[o/(r+o+i-1),l/(a+l+p-1),(o+r-1)/(r+o+i-1),(l+a-1)/(a+l+p-1)]],[0],[r,a]),[0])}))}(t,[s,o],[[p,c],[h,m]])}))}function ff(e,t){var n=t[0],r=t[1],a=uf(e),s=a[0],o=a[1],i=r/n,u=[0,0,0,0],l=u[0],p=u[1],c=u[2],d=u[3];return o/s<i?(l=0,p=0,c=Math.round(.5*(i*s-o)),d=Math.round(.5*(i*s-o))):(l=Math.round(.5*(1/i*o-s)),p=Math.round(.5*(1/i*o-s)),c=0,d=0),{resized:Zo((function(){var t=function(e){return e instanceof la?e:uo(e)}(e);return t=op(t,[[l,p],[c,d],[0,0]]),bd.resizeBilinear(t,[n,r])})),padding:{top:l,left:c,right:d,bottom:p}}}function gf(e){return xm(this,void 0,void 0,(function(){return vm(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function yf(e,t){return{score:e.score,keypoints:e.keypoints.map((function(e){var n=e.score,r=e.part,a=e.position;return{score:n,part:r,position:{x:t-1-a.x,y:a.y}}}))}}function bf(e,t,n,r,a){var s=t[0],o=t[1],i=n[0],u=n[1],l=function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===t&&0===r&&0===a?e:e.map((function(e){return function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:e.score,keypoints:e.keypoints.map((function(e){var s=e.score,o=e.part,i=e.position;return{score:s,part:o,position:{x:i.x*n+a,y:i.y*t+r}}}))}}(e,t,n,r,a)}))}(e,(s+r.top+r.bottom)/i,(o+r.left+r.right)/u,-r.top,-r.left);return a?function(e,t){return t<=0?e:e.map((function(e){return yf(e,t)}))}(l,o):l}var wf=!0,xf=!1,vf={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},Nf=["MobileNetV1","ResNet50"],kf={MobileNetV1:[8,16,32],ResNet50:[32,16]},Sf={MobileNetV1:[.5,.75,1],ResNet50:[1]},Ef=[1,2,4],Tf={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},Af={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function _f(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".")}function If(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius,s=e.minKeypointScore,o=e.refineSteps;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".");if(s<0||s>1)throw new Error("Invalid minKeypointScore "+s+".Should be in range [0.0, 1.0]");if(o<=0||o>20)throw new Error("Invalid refineSteps "+o+".Should be in range [1, 20]")}var Mf=function(){function e(e){this.baseModel=e}return e.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},e.prototype.segmentPersonActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var a=uf(e),s=a[0],o=a[1],i=df(t,this.baseModel.outputStride,[s,o]),u=ff(e,i),l=u.resized,p=u.padding,c=Zo((function(){var e=r.predictForPersonSegmentation(l),t=e.segmentLogits,a=e.heatmapScores,i=e.offsets,u=e.displacementFwd,c=e.displacementBwd,d=l.shape,h=d[0],m=d[1],f=mf(t,[s,o],[h,m],[[p.top,p.bottom],[p.left,p.right]],wf);return{segmentation:km(Yp(f),n),heatmapScores:a,offsets:i,displacementFwd:u,displacementBwd:c}})),d=c.segmentation,h=c.heatmapScores,m=c.offsets,f=c.displacementFwd,g=c.displacementBwd;return l.dispose(),{segmentation:d,heatmapScores:h,offsets:m,displacementFwd:f,displacementBwd:g,padding:p,internalResolutionHeightAndWidth:i}},e.prototype.segmentPerson=function(e,t){return void 0===t&&(t=Tf),xm(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,p,c,d,h,m,f,g,y,b,w;return vm(this,(function(x){switch(x.label){case 0:return _f(t=wm({},Tf,t)),n=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),r=n.segmentation,a=n.heatmapScores,s=n.offsets,o=n.displacementFwd,i=n.displacementBwd,u=n.padding,l=n.internalResolutionHeightAndWidth,p=r.shape,c=p[0],d=p[1],[4,r.data()];case 1:return h=x.sent(),r.dispose(),[4,gf([a,s,o,i])];case 2:return m=x.sent(),f=m[0],g=m[1],y=m[2],b=m[3],w=bf(w=tf(f,g,y,b,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[c,d],l,u,xf),a.dispose(),s.dispose(),o.dispose(),i.dispose(),[2,{height:c,width:d,data:h,allPoses:w}]}}))}))},e.prototype.segmentMultiPerson=function(e,t){return void 0===t&&(t=Af),xm(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,p,c,d,h,m,f,g,y,b,w,x,v,N,k=this;return vm(this,(function(S){switch(S.label){case 0:return If(t=wm({},Af,t)),n=uf(e),r=n[0],a=n[1],s=df(t.internalResolution,this.baseModel.outputStride,[r,a]),o=ff(e,s),i=o.resized,u=o.padding,l=Zo((function(){var e,n=k.predictForMultiPersonInstanceSegmentationAndPart(i),o=n.segmentLogits,l=n.longOffsets,p=n.heatmapScores,c=n.offsets,d=n.displacementFwd,h=n.displacementBwd,m=mf(o,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],wf);return e=l,{segmentation:km(Yp(m),t.segmentationThreshold),longOffsets:e,heatmapScoresRaw:p,offsetsRaw:c,displacementFwdRaw:d,displacementBwdRaw:h}})),p=l.segmentation,c=l.longOffsets,d=l.heatmapScoresRaw,h=l.offsetsRaw,m=l.displacementFwdRaw,f=l.displacementBwdRaw,[4,gf([d,h,m,f])];case 1:return g=S.sent(),y=g[0],b=g[1],w=g[2],x=g[3],v=bf(v=tf(y,b,w,x,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,a],s,u,xf),[4,Wm(p,c,v,r,a,this.baseModel.outputStride,s,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return N=S.sent(),i.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),m.dispose(),f.dispose(),[2,N]}}))}))},e.prototype.segmentPersonPartsActivation=function(e,t,n){var r=this;void 0===n&&(n=.5);var a=uf(e),s=a[0],o=a[1],i=df(t,this.baseModel.outputStride,[s,o]),u=ff(e,i),l=u.resized,p=u.padding,c=Zo((function(){var e=r.predictForPersonSegmentationAndPart(l),t=e.segmentLogits,a=e.partHeatmapLogits,i=e.heatmapScores,u=e.offsets,c=e.displacementFwd,d=e.displacementBwd,h=l.shape,m=h[0],f=h[1],g=mf(t,[s,o],[m,f],[[p.top,p.bottom],[p.left,p.right]],wf),y=mf(a,[s,o],[m,f],[[p.top,p.bottom],[p.left,p.right]],wf);return{partSegmentation:Sm(km(Yp(g),n),y),heatmapScores:i,offsets:u,displacementFwd:c,displacementBwd:d}})),d=c.partSegmentation,h=c.heatmapScores,m=c.offsets,f=c.displacementFwd,g=c.displacementBwd;return l.dispose(),{partSegmentation:d,heatmapScores:h,offsets:m,displacementFwd:f,displacementBwd:g,padding:p,internalResolutionHeightAndWidth:i}},e.prototype.segmentPersonParts=function(e,t){return void 0===t&&(t=Tf),xm(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,p,c,d,h,m,f,g,y,b,w;return vm(this,(function(x){switch(x.label){case 0:return _f(t=wm({},Tf,t)),n=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),r=n.partSegmentation,a=n.heatmapScores,s=n.offsets,o=n.displacementFwd,i=n.displacementBwd,u=n.padding,l=n.internalResolutionHeightAndWidth,p=r.shape,c=p[0],d=p[1],[4,r.data()];case 1:return h=x.sent(),r.dispose(),[4,gf([a,s,o,i])];case 2:return m=x.sent(),f=m[0],g=m[1],y=m[2],b=m[3],w=bf(w=tf(f,g,y,b,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[c,d],l,u,xf),a.dispose(),s.dispose(),o.dispose(),i.dispose(),[2,{height:c,width:d,data:h,allPoses:w}]}}))}))},e.prototype.segmentMultiPersonParts=function(e,t){return void 0===t&&(t=Af),xm(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,p,c,d,h,m,f,g,y,b,w,x,v,N,k,S=this;return vm(this,(function(E){switch(E.label){case 0:return If(t=wm({},Af,t)),n=uf(e),r=n[0],a=n[1],s=df(t.internalResolution,this.baseModel.outputStride,[r,a]),o=ff(e,s),i=o.resized,u=o.padding,l=Zo((function(){var e=S.predictForMultiPersonInstanceSegmentationAndPart(i),n=e.segmentLogits,o=e.longOffsets,l=e.heatmapScores,p=e.offsets,c=e.displacementFwd,d=e.displacementBwd,h=e.partHeatmaps,m=mf(n,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],wf),f=mf(h,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],wf),g=o;return{segmentation:km(Yp(m),t.segmentationThreshold),longOffsets:g,heatmapScoresRaw:l,offsetsRaw:p,displacementFwdRaw:c,displacementBwdRaw:d,partSegmentation:Em(f)}})),p=l.segmentation,c=l.longOffsets,d=l.heatmapScoresRaw,h=l.offsetsRaw,m=l.displacementFwdRaw,f=l.displacementBwdRaw,g=l.partSegmentation,[4,gf([d,h,m,f])];case 1:return y=E.sent(),b=y[0],w=y[1],x=y[2],v=y[3],N=bf(N=tf(b,w,x,v,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,a],s,u,xf),[4,Hm(p,c,g,N,r,a,this.baseModel.outputStride,s,u,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return k=E.sent(),i.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),m.dispose(),f.dispose(),g.dispose(),[2,k]}}))}))},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function $f(e){return xm(this,void 0,void 0,(function(){var t,n,r,a,s,o;return vm(this,(function(i){switch(i.label){case 0:if(t=e.outputStride,n=e.quantBytes,r=e.multiplier,null==b)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return a=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+e+".json";return 4===n?of+"float/"+r[t]+"/"+a:of+"quant"+n+"/"+r[t]+"/"+a}(t,r,n),[4,gm(e.modelUrl||a)];case 1:return s=i.sent(),o=new Am(s,t),[2,new Mf(o)]}}))}))}function Df(e){return xm(this,void 0,void 0,(function(){var t,n,r,a,s;return vm(this,(function(o){switch(o.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==b)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=function(e,t){var n="model-stride"+e+".json";return 4===t?sf+"float/"+n:sf+"quant"+t+"/"+n}(t,n),[4,gm(e.modelUrl||r)];case 1:return a=o.sent(),s=new af(a,t),[2,new Mf(s)]}}))}))}function Of(e){return void 0===e&&(e=vf),xm(this,void 0,void 0,(function(){return vm(this,(function(t){return"ResNet50"===(e=function(e){if(null==(e=e||vf).architecture&&(e.architecture="MobileNetV1"),Nf.indexOf(e.architecture)<0)throw new Error("Invalid architecture "+e.architecture+". Should be one of "+Nf);if(null==e.outputStride&&(e.outputStride=16),kf[e.architecture].indexOf(e.outputStride)<0)throw new Error("Invalid outputStride "+e.outputStride+". Should be one of "+kf[e.architecture]+" for architecture "+e.architecture+".");if(null==e.multiplier&&(e.multiplier=1),Sf[e.architecture].indexOf(e.multiplier)<0)throw new Error("Invalid multiplier "+e.multiplier+". Should be one of "+Sf[e.architecture]+" for architecture "+e.architecture+".");if(null==e.quantBytes&&(e.quantBytes=4),Ef.indexOf(e.quantBytes)<0)throw new Error("Invalid quantBytes "+e.quantBytes+". Should be one of "+Ef+" for architecture "+e.architecture+".");return e}(e)).architecture?[2,Df(e)]:"MobileNetV1"===e.architecture?[2,$f(e)]:[2,null]}))}))}var Ff={};function Cf(e,t,n,r){var a=e.width,s=e.height,o=t.width,i=t.height;if(a!==o||s!==i)throw new Error("error: dimensions must match. "+n+" has dimensions "+a+"x"+s+", "+r+" has dimensions "+o+"x"+i)}function Rf(e){var t=e.getContext("2d");t.scale(-1,1),t.translate(-e.width,0)}function Bf(e,t,n){e.globalCompositeOperation=n,e.drawImage(t,0,0)}function Lf(e){return Ff[e]||(Ff[e]=document.createElement("canvas")),Ff[e]}function Pf(e,t,n){var r=Lf(n);return 0===t?function(e,t){var n=e.width,r=e.height;t.width=n,t.height=r,t.getContext("2d").drawImage(e,0,0,n,r)}(e,r):function(e,t,n){var r=e.height,a=e.width,s=n.getContext("2d");n.width=a,n.height=r,s.clearRect(0,0,a,r),s.save(),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?function(e,t,n){for(var r=e.getContext("2d"),a=0,s=1/(2*Math.PI*5*5),o=n<3?1:2,i=-n;i<=n;i+=o)for(var u=-n;u<=n;u+=o)a+=s*Math.exp(-(u*u+i*i)/50);for(i=-n;i<=n;i+=o)for(u=-n;u<=n;u+=o)r.globalAlpha=s*Math.exp(-(u*u+i*i)/50)/a*n,r.drawImage(t,u,i);r.globalAlpha=1}(n,e,t):(s.filter="blur("+t+"px)",s.drawImage(e,0,0,a,r)),s.restore()}(e,t,r),r}function zf(e,t){var n=Lf(t);return function(e,t){t.width=e.width,t.height=e.height,t.getContext("2d").putImageData(e,0,0)}(e,n),n}function Vf(e,t,n,r,a){if(void 0===t&&(t={r:0,g:0,b:0,a:0}),void 0===n&&(n={r:0,g:0,b:0,a:255}),void 0===r&&(r=!1),void 0===a&&(a=[1]),Array.isArray(e)&&0===e.length)return null;var s,o=(s=Array.isArray(e)?e:[e])[0],i=o.width,u=o.height,l=new Uint8ClampedArray(i*u*4);function p(e,t,n,r,a,s){void 0===s&&(s={r:0,g:255,b:255,a:255});for(var o=-a;o<=a;o++)for(var i=-a;i<=a;i++)if(0!==o&&0!==i){var u=(t+o)*r+(n+i);e[4*u+0]=s.r,e[4*u+1]=s.g,e[4*u+2]=s.b,e[4*u+3]=s.a}}function c(e,t,n,r,a,s){void 0===a&&(a=[1]),void 0===s&&(s=1);for(var o=0,i=-s;i<=s;i++)for(var u=function(s){if(0!==i&&0!==s){var u=(t+i)*r+(n+s);a.some((function(t){return t===e[u]}))||(o+=1)}},l=-s;l<=s;l++)u(l);return o>0}for(var d=0;d<u;d+=1)for(var h=function(e){var o=d*i+e;l[4*o+0]=n.r,l[4*o+1]=n.g,l[4*o+2]=n.b,l[4*o+3]=n.a;for(var h=function(n){if(a.some((function(e){return e===s[n].data[o]}))){l[4*o]=t.r,l[4*o+1]=t.g,l[4*o+2]=t.b,l[4*o+3]=t.a;var h=c(s[n].data,d,e,i,a);r&&d-1>=0&&d+1<u&&e-1>=0&&e+1<i&&h&&p(l,d,e,i,1)}},m=0;m<s.length;m++)h(m)},m=0;m<i;m+=1)h(m);return new ImageData(l,i,u)}var Wf=[[110,64,170],[143,61,178],[178,60,178],[210,62,167],[238,67,149],[255,78,125],[255,94,99],[255,115,75],[255,140,56],[239,167,47],[217,194,49],[194,219,64],[175,240,91],[135,245,87],[96,247,96],[64,243,115],[40,234,141],[28,219,169],[26,199,194],[33,176,213],[47,150,224],[65,125,224],[84,101,214],[99,81,195]];function Hf(e,t){if(void 0===t&&(t=Wf),Array.isArray(e)&&0===e.length)return null;for(var n,r=(n=Array.isArray(e)?e:[e])[0],a=r.width,s=r.height,o=new Uint8ClampedArray(a*s*4),i=0;i<s*a;++i){var u=4*i;o[u+0]=255,o[u+1]=255,o[u+2]=255,o[u+3]=255;for(var l=0;l<n.length;l++){var p=n[l].data[i];if(-1!==p){var c=t[p];if(!c)throw new Error("No color could be found for part id "+p);o[u+0]=c[0],o[u+1]=c[1],o[u+2]=c[2],o[u+3]=255}}}return new ImageData(o,a,s)}var Kf="blurred",Uf="blurred-mask",qf="mask";function jf(e,t,n,r,a,s){void 0===r&&(r=.7),void 0===a&&(a=0),void 0===s&&(s=!1);var o=uf(t),i=o[0],u=o[1];e.width=u,e.height=i;var l=e.getContext("2d");if(l.save(),s&&Rf(e),l.drawImage(t,0,0),l.globalAlpha=r,n){Cf({width:u,height:i},n,"image","mask");var p=Pf(zf(n,qf),a,Uf);l.drawImage(p,0,0,u,i)}l.restore()}function Gf(e,t,n,r,a,s,o){void 0===r&&(r=.7),void 0===a&&(a=0),void 0===s&&(s=!1),void 0===o&&(o=10);var i=uf(t),u=i[0];Cf({width:i[1],height:u},n,"image","mask");var l=Pf(zf(n,qf),a,Uf);e.width=l.width,e.height=l.height;var p=e.getContext("2d");p.save(),s&&Rf(e);var c=Lf("lowres-part-mask"),d=c.getContext("2d");c.width=l.width*(1/o),c.height=l.height*(1/o),d.drawImage(l,0,0,l.width,l.height,0,0,c.width,c.height),p.imageSmoothingEnabled=!1,p.drawImage(c,0,0,c.width,c.height,0,0,e.width,e.height);for(var h=0;h<c.width;h++)p.beginPath(),p.strokeStyle="#ffffff",p.moveTo(o*h,0),p.lineTo(o*h,e.height),p.stroke();for(h=0;h<c.height;h++)p.beginPath(),p.strokeStyle="#ffffff",p.moveTo(0,o*h),p.lineTo(e.width,o*h),p.stroke();p.globalAlpha=1-r,p.drawImage(t,0,0,l.width,l.height),p.restore()}function Yf(e,t,n,r,a,s){void 0===r&&(r=3),void 0===a&&(a=3),void 0===s&&(s=!1);var o=Pf(t,r,Kf);e.width=o.width,e.height=o.height;var i=e.getContext("2d");if(Array.isArray(n)&&0===n.length)i.drawImage(o,0,0);else{var u=function(e,t){var n=zf(Vf(e,{r:0,g:0,b:0,a:255},{r:0,g:0,b:0,a:0}),qf);return 0===t?n:Pf(n,t,Uf)}(n,a);i.save(),s&&Rf(e);var l=uf(t),p=l[0],c=l[1];i.drawImage(t,0,0,c,p),Bf(i,u,"destination-in"),Bf(i,o,"destination-over"),i.restore()}}function Jf(e,t,n,r,a,s,o){void 0===r&&(r=[0,1]),void 0===a&&(a=3),void 0===s&&(s=3),void 0===o&&(o=!1);var i=Pf(t,a,Kf);e.width=i.width,e.height=i.height;var u=e.getContext("2d");if(Array.isArray(n)&&0===n.length)u.drawImage(i,0,0);else{var l=function(e,t,n){var r=zf(Vf(e,{r:0,g:0,b:0,a:0},{r:0,g:0,b:0,a:255},!0,t),qf);return 0===n?r:Pf(r,n,Uf)}(n,r,s);u.save(),o&&Rf(e);var p=uf(t),c=p[0],d=p[1];u.drawImage(t,0,0,d,c),Bf(u,l,"destination-in"),Bf(u,i,"destination-over"),u.restore()}}var Xf=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],Qf="2.1.0"},377:(e,t,n)=>{var r=n(832),a=n(652),s=n(801),o=n(30),i=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(a,s){var o,i=this,u=256,l=s.pow(u,6),p=s.pow(2,52),c=2*p,d=255;function h(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,b(a)]}}():e,3),r),h=new m(r),w=function(){for(var e=h.g(6),t=l,n=0;e<p;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=c;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|h.g(4)},w.quick=function(){return h.g(4)/4294967296},w.double=w,y(b(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&f(r,h),e.state=function(){return f(h,{})}),n?(s.random=e,t):e})(w,d,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=d&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=d&a+1],n=n*u+o[d&(o[a]=o[s=d&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),a),e.exports){e.exports=h;try{o=n(906)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},906:()=>{},352:()=>{},758:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{const e=n(936);window.onload=function(){console.log("v1.3");const t=document.getElementById("image"),n=document.getElementById("fileselect"),r=document.getElementById("canvas1"),a=document.getElementById("canvas3"),s=document.getElementById("downloadbutton");n.onchange=function(n){var o=new FileReader;o.onload=function(n){document.getElementById("image").src=n.target.result,async function(n=!0){const o=await e.load(),i=await o.segmentMultiPersonParts(t,{flipHorizontal:!1,internalResolution:"high",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.2,nmsRadius:20,minKeypointScore:.3,refineSteps:10});console.log(i);if(fronts=n?{pose:9,pose2:7,dot:[2,3,6,7,10]}:{pose:10,pose2:8,dot:[4,5,8,9,11]},r.getContext&&a.getContext){seg=i[0],r.width=a.width=seg.width,r.height=a.height=seg.height;const e=new Image;e.src=t.src,e.onload=()=>{const t=r.getContext("2d"),n=a.getContext("2d");t.globalAlpha=.5,n.globalAlpha=1,t.drawImage(e,0,0),n.drawImage(e,0,0);const o=seg.pose.keypoints[fronts.pose].position,i=seg.pose.keypoints[fronts.pose2].position,u=Math.sqrt(Math.pow(o.x-i.x,2)+Math.pow(o.y-i.y,2)),l=new Image;l.src="watermelon.png",l.onload=()=>{let e=u/(l.width-300);const r=l.width*e,i=l.height*e;console.log(i,r,o,u),n.drawImage(l,o.x-r/2-.7*u,o.y-i,r,i);for(var p=0;seg.height>p;p++)for(var c=0;seg.width>c;c++){var d=seg.data[c+p*seg.width];if(-1!=d&&fronts.dot.indexOf(d)>=0){let e=t.getImageData(c,p,1,1).data;n.fillStyle="#"+("0"+e[0].toString(16)).substr(-2)+("0"+e[1].toString(16)).substr(-2)+("0"+e[2].toString(16)).substr(-2),n.fillRect(c,p,1,1)}}s.href=a.toDataURL("image/png")}}}}()},o.readAsDataURL(n.target.files[0])}}})()})();